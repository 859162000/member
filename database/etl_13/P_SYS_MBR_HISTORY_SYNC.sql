CREATE OR REPLACE PROCEDURE P_SYS_MBR_HISTORY_SYNC
(
in_sync_date in varchar2 --同步日期字符串YYYYMMDD
)
--同步卡维表、卡交易、服务记录
AS
on_flag NUMBER;
os_prompt varchar2(3000);
v_sync_date  varchar2(6); --同步日期字符串YYYYMMDD

BEGIN
/******************************增量同步******************************/

DELETE FROM T_POINT_HISTORY where POINT_HISTORY_ID in (
select POINT_HISTORY_ID from ccs_mbr_prod.T_POINT_HISTORY@MBR_BASE
where to_char(update_date,'yyyymmdd')=in_sync_date
)
;
insert into T_POINT_HISTORY
(POINT_HISTORY_ID,MEMBER_ID,SET_TIME,LEVEL_POINT,TICKET_COUNT,ACTIVITY_POINT,EXCHANGE_POINT,
EXCHANGE_POINT_EXPIRE_TIME,POINT_TYPE,POINT_SYS,POINT_TRANS_TYPE,POINT_TRANS_CODE,POINT_TRANS_CODE_WEB,ADJ_RESION,
ORG_POINT_BALANCE,POINT_BALANCE,IS_SYNC_BALANCE,ISDELETE,CREATE_BY,CREATE_DATE,UPDATE_BY,UPDATE_DATE,VERSION,MEMBER_POINT_ID,ADJ_REASON_TYPE,
ADJ_REASON,ORDER_ID,PRODUCT_NAME,IS_SUCCEED,CINEMA_INNER_CODE)
select POINT_HISTORY_ID,MEMBER_ID,SET_TIME,LEVEL_POINT,TICKET_COUNT,ACTIVITY_POINT,EXCHANGE_POINT,
EXCHANGE_POINT_EXPIRE_TIME,POINT_TYPE,POINT_SYS,POINT_TRANS_TYPE,POINT_TRANS_CODE,POINT_TRANS_CODE_WEB,ADJ_RESION,
ORG_POINT_BALANCE,POINT_BALANCE,IS_SYNC_BALANCE,ISDELETE,CREATE_BY,CREATE_DATE,UPDATE_BY,UPDATE_DATE,VERSION,MEMBER_POINT_ID,ADJ_REASON_TYPE,
ADJ_REASON,ORDER_ID,PRODUCT_NAME,IS_SUCCEED,CINEMA_INNER_CODE
from ccs_mbr_prod.T_POINT_HISTORY@MBR_BASE
where to_char(update_date,'yyyymmdd')=in_sync_date
;
COMMIT;


------------------------
DELETE FROM T_POINT_HISTORY_ARCHIVE where POINT_HISTORY_ARCHIVE_ID in (
select POINT_HISTORY_ARCHIVE_ID from ccs_mbr_prod.T_POINT_HISTORY_ARCHIVE@MBR_BASE
where to_char(update_date,'yyyymmdd')=in_sync_date
)
;
insert into T_POINT_HISTORY_ARCHIVE
(POINT_HISTORY_ARCHIVE_ID,MEMBER_ID,SET_TIME,LEVEL_POINT,ACTIVITY_POINT,EXCHANGE_POINT,EXCHANGE_POINT_EXPIRE_TIME,
POINT_TYPE,POINT_SYS,POINT_TRANS_TYPE,POINT_TRANS_CODE,POINT_TRANS_CODE_WEB,ADJ_RESION,ORG_POINT_BALANCE,POINT_BALANCE,
IS_SYNC_BALANCE,ISDELETE,CREATE_BY,CREATE_DATE,UPDATE_BY,UPDATE_DATE,VERSION,ARCHIEVE_BY,ARCHIVE_TIME,TICKET_COUNT,
MEMBER_POINT_ID,ADJ_REASON_TYPE,ADJ_REASON,ORDER_ID,PRODUCT_NAME,IS_SUCCEED,CINEMA_INNER_CODE,POINT_HISTORY_ID)
select POINT_HISTORY_ARCHIVE_ID,MEMBER_ID,SET_TIME,LEVEL_POINT,ACTIVITY_POINT,EXCHANGE_POINT,EXCHANGE_POINT_EXPIRE_TIME,
POINT_TYPE,POINT_SYS,POINT_TRANS_TYPE,POINT_TRANS_CODE,POINT_TRANS_CODE_WEB,ADJ_RESION,ORG_POINT_BALANCE,POINT_BALANCE,
IS_SYNC_BALANCE,ISDELETE,CREATE_BY,CREATE_DATE,UPDATE_BY,UPDATE_DATE,VERSION,ARCHIEVE_BY,ARCHIVE_TIME,TICKET_COUNT,
MEMBER_POINT_ID,ADJ_REASON_TYPE,ADJ_REASON,ORDER_ID,PRODUCT_NAME,IS_SUCCEED,CINEMA_INNER_CODE,POINT_HISTORY_ID
from ccs_mbr_prod.T_POINT_HISTORY_ARCHIVE@MBR_BASE
where to_char(update_date,'yyyymmdd')=in_sync_date
;
COMMIT;
/******************************同步完成******************************/
on_flag:=0;
os_prompt:='同步成功';
P_SYS_TASK_SCHEDULING_LOG('P_SYS_MBR_HISTORY_SYNC','P_SYS_MBR_HISTORY_SYNC',NULL,SYSDATE,on_flag,os_prompt);
COMMIT;

EXCEPTION
   WHEN NO_DATA_FOUND THEN
     P_SYS_SP_FN_ERR_LOG('P_SYS_MBR_HISTORY_SYNC',SYSDATE,'ERROR','数据库中NO_DATA_FOUND');
      WHEN TOO_MANY_ROWS THEN
      P_SYS_SP_FN_ERR_LOG('P_SYS_MBR_HISTORY_SYNC',SYSDATE,'ERROR','TOO_MANY_ROWS');
      WHEN OTHERS THEN
      on_flag := -1;
rollback;
P_SYS_TASK_SCHEDULING_LOG('P_SYS_MBR_HISTORY_SYNC','P_SYS_MBR_HISTORY_SYNC',NULL,SYSDATE,on_flag,SUBSTRB(SQLERRM,1,3000));
end;