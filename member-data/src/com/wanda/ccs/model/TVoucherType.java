package com.wanda.ccs.model;

// Generated 2011-12-12 16:55:46 by Hibernate Tools 3.2.4.GA

import com.xcesys.extras.core.dao.model.VersionableEntity;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * TVoucherType generated by hbm2java
 */
@Entity
@Table(name = "T_VOUCHER_TYPE")
public class TVoucherType extends VersionableEntity implements
		java.io.Serializable {
	private static final long serialVersionUID = -4169204145956683548L;
	
	private Long id;
	private TTicketType tTicketType;
	private String typeName; //券类型名称
	private String status = "E"; //券类型状态  E可用、D不可用、X删除
	private String typeCode; //用户指定的券类型编码
	private String voucherLevel; //券类型的级别 G院线级、R区域级
	private String ownerRegion; //区域级券的负责区域代码，对于院线级为null
	private String useType; //券使用方式 M代金、T兑换、D折扣
	private String description; //备注
	private Set<TVoucherOrder> tVoucherOrders = new HashSet<TVoucherOrder>(0);
	private Set<TVoucher> tVouchers = new HashSet<TVoucher>(0);
	private Set<TVoucherTypeDef> tVoucherTypeDefs = new HashSet<TVoucherTypeDef>(
			0);
	private Set<TReqVoucherType> tReqVoucherTypes = new HashSet<TReqVoucherType>(
			0);
	private Set<TVoucherTicketType> tVoucherTicketTypes = new HashSet<TVoucherTicketType>(
			0);
	private List<TTicketTypeCinema> tTicketTypeCinemas = new ArrayList<TTicketTypeCinema>(
			0);
	private List<TTicketTypeRegion> tTicketTypeRegions = new ArrayList<TTicketTypeRegion>(
			0);

	public TVoucherType() {
	}
	
	public TVoucherType(TReqVoucherType req, TTicketType ticketType) {
		this.settTicketType(ticketType);
		this.setTypeName(req.getTypeName());
		this.setTypeCode(req.getTypeCode());
		this.setVoucherLevel(req.getVoucherLevel());
		this.setOwnerRegion(req.getOwnerRegion());
		this.setUseType(req.getUseType());
		this.setDescription(req.getDescription());
	}
	
	public TVoucherType(TTicketType tTicketType, String typeName, String status,
			String typeCode, String voucherLevel, String useType) {
		this.tTicketType = tTicketType;
		this.typeName = typeName;
		this.status = status;
		this.typeCode = typeCode;
		this.voucherLevel = voucherLevel;
		this.useType = useType;
	}

	public TVoucherType(TTicketType tTicketType, String typeName, String status,
			String typeCode, String voucherLevel, String ownerRegion,
			String useType, String description,
			Set<TVoucherOrder> tVoucherOrders, Set<TVoucher> tVouchers,
			Set<TVoucherTypeDef> tVoucherTypeDefs,
			Set<TReqVoucherType> tReqVoucherTypes,
			Set<TVoucherTicketType> tVoucherTicketTypes) {
		this.tTicketType = tTicketType;
		this.typeName = typeName;
		this.status = status;
		this.typeCode = typeCode;
		this.voucherLevel = voucherLevel;
		this.ownerRegion = ownerRegion;
		this.useType = useType;
		this.description = description;
		this.tVoucherOrders = tVoucherOrders;
		this.tVouchers = tVouchers;
		this.tVoucherTypeDefs = tVoucherTypeDefs;
		this.tReqVoucherTypes = tReqVoucherTypes;
		this.tVoucherTicketTypes = tVoucherTicketTypes;
	}
	
	public void copy(TReqVoucherType req) {
		setTypeName(req.getTypeName());
		setTypeCode(req.getTypeCode());
		setDescription(req.getDescription());
	}
	@Id
	@Column(name = "VOUCHER_TYPE_ID")
	@GeneratedValue(generator = "foreigner")
	@GenericGenerator(name = "foreigner", strategy = "foreign", parameters = { @Parameter(name = "property", value = "tTicketType") })
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public TTicketType gettTicketType() {
		return this.tTicketType;
	}

	public void settTicketType(TTicketType tTicketType) {
		this.tTicketType = tTicketType;
	}

	@Column(name = "TYPE_NAME", nullable = false)
	public String getTypeName() {
		return this.typeName;
	}

	public void setTypeName(String typeName) {
		this.typeName = typeName.trim();
	}

	@Column(name = "STATUS", nullable = false, length = 1)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "TYPE_CODE", nullable = false, length = 50)
	public String getTypeCode() {
		return this.typeCode;
	}

	public void setTypeCode(String typeCode) {
		this.typeCode = typeCode;
	}

	@Column(name = "VOUCHER_LEVEL", nullable = false, length = 1)
	public String getVoucherLevel() {
		return this.voucherLevel;
	}

	public void setVoucherLevel(String voucherLevel) {
		this.voucherLevel = voucherLevel;
	}

	@Column(name = "OWNER_REGION", length = 20)
	public String getOwnerRegion() {
		return this.ownerRegion;
	}

	public void setOwnerRegion(String ownerRegion) {
		this.ownerRegion = ownerRegion;
	}

	@Column(name = "USE_TYPE", nullable = false, length = 1)
	public String getUseType() {
		return this.useType;
	}

	public void setUseType(String useType) {
		this.useType = useType;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tVoucherType")
	public Set<TVoucherOrder> gettVoucherOrders() {
		return this.tVoucherOrders;
	}

	public void settVoucherOrders(Set<TVoucherOrder> tVoucherOrders) {
		this.tVoucherOrders = tVoucherOrders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tVoucherType")
	public Set<TVoucher> gettVouchers() {
		return this.tVouchers;
	}

	public void settVouchers(Set<TVoucher> tVouchers) {
		this.tVouchers = tVouchers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tVoucherType")
	public Set<TVoucherTypeDef> gettVoucherTypeDefs() {
		return this.tVoucherTypeDefs;
	}

	public void settVoucherTypeDefs(Set<TVoucherTypeDef> tVoucherTypeDefs) {
		this.tVoucherTypeDefs = tVoucherTypeDefs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tVoucherType")
	public Set<TReqVoucherType> gettReqVoucherTypes() {
		return this.tReqVoucherTypes;
	}

	public void settReqVoucherTypes(Set<TReqVoucherType> tReqVoucherTypes) {
		this.tReqVoucherTypes = tReqVoucherTypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tVoucherType")
	public Set<TVoucherTicketType> gettVoucherTicketTypes() {
		return this.tVoucherTicketTypes;
	}

	public void settVoucherTicketTypes(
			Set<TVoucherTicketType> tVoucherTicketTypes) {
		this.tVoucherTicketTypes = tVoucherTicketTypes;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tVoucherType")
	@OrderBy("cinemaId")
	@Fetch(FetchMode.SUBSELECT)
	public List<TTicketTypeCinema> gettTicketTypeCinemas() {
		return tTicketTypeCinemas;
	}

	public void settTicketTypeCinemas(List<TTicketTypeCinema> tTicketTypeCinemas) {
		this.tTicketTypeCinemas = tTicketTypeCinemas;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tVoucherType")
	@OrderBy("regionCode")
	@Fetch(FetchMode.SUBSELECT)
	public List<TTicketTypeRegion> gettTicketTypeRegions() {
		return tTicketTypeRegions;
	}

	public void settTicketTypeRegions(List<TTicketTypeRegion> tTicketTypeRegions) {
		this.tTicketTypeRegions = tTicketTypeRegions;
	}
}
