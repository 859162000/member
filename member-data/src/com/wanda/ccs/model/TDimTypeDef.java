package com.wanda.ccs.model;

// Generated 2011-10-17 18:01:57 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import com.xcesys.extras.core.dao.model.AbstractEntity;

/**
 * TDimtypedef generated by hbm2java
 */
@Entity
@Table(name = "T_DIMTYPEDEF")
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class TDimTypeDef extends AbstractEntity implements java.io.Serializable {

	private static final long serialVersionUID = -7014314736073245048L;
	private Long id;
	private String typename;
	private Long isdelete;
	private Date updatetime;
	private Set<TDimDef> tDimdefs = new HashSet<TDimDef>(0);

	public TDimTypeDef() {
	}

	public TDimTypeDef(String typename) {
		this.typename = typename;
	}

	public TDimTypeDef(String typename, Long isdelete, Date updatetime,
			Set<TDimDef> tDimdefs) {
		this.typename = typename;
		this.isdelete = isdelete;
		this.updatetime = updatetime;
		this.tDimdefs = tDimdefs;
	}

	@SequenceGenerator(name = "generator", sequenceName = "S_T_DIMTYPEDEF")
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "TYPEID", unique = true, nullable = false, precision = 38, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long typeid) {
		this.id = typeid;
	}

	@Column(name = "TYPENAME", nullable = false, length = 60)
	public String getTypename() {
		return this.typename;
	}

	public void setTypename(String typename) {
		this.typename = typename;
	}

	@Column(name = "ISDELETE", precision = 38, scale = 0)
	public Long getIsdelete() {
		return this.isdelete;
	}

	public void setIsdelete(Long isdelete) {
		this.isdelete = isdelete;
	}

	@Column(name = "UPDATETIME")
	public Date getUpdatetime() {
		return this.updatetime;
	}

	public void setUpdatetime(Date updatetime) {
		this.updatetime = updatetime;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tDimtypedef")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	public Set<TDimDef> gettDimdefs() {
		return this.tDimdefs;
	}

	public void settDimdefs(Set<TDimDef> tDimdefs) {
		this.tDimdefs = tDimdefs;
	}

	@Override
	public String toString() {
		return "TDimTypeDef [id=" + id + ", typename=" + typename + "]";
	}

}
