package com.wanda.ccs.model;

// Generated 2011-10-17 18:01:57 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

import org.apache.commons.lang.StringUtils;

import com.xcesys.extras.core.dao.model.VersionableEntity;

/**
 * TFilmCopy generated by hbm2java
 */
@Entity
@Table(name = "T_FILM_COPY")
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
public class TFilmCopy extends VersionableEntity implements
		java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private Long id;
	private String copyNo;//拷贝编号(同一影片拷贝编号不可重复)
	
	private TFilm tFilm; //电影
	private Long filmId; //电影ID
	
	private String copyType; //拷贝类型(01:买断,02:普通)
	private Date enterTime;//入库时间
	private Boolean instock;//是否在库？
	
	private Long backFromCinemaId;//回库单位ID
	private TCinema backFromCinema;//回库单位
	
	private String cartNo;//架号
	private Integer slotNo;//桶数
	private Integer showCount;//放映累计场次数
	private String damage;//伤级
	private String medium; //介质类型
	private Integer count;//本数
	private String copyFrom; //拷贝来源
	private String language; //拷贝语言
	private String[] languages;//拷贝语言数组
	
	private Long supplyPublisherId;//供片商ID
	private TPublisher supplyPublisher;
	
	private Set<TFilmCopySchedule> tFilmCopySchedules = new HashSet<TFilmCopySchedule>(
			0);
	private Set<TFilmCopyTrackLog> tFilmCopyTrackLogs = new HashSet<TFilmCopyTrackLog>(
			0);

	public TFilmCopy() {
	}


	@SequenceGenerator(name = "generator", sequenceName = "S_T_FILM_COPY")
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "SEQID", unique = true, nullable = false, precision = 38, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FILM_ID",insertable=false,updatable=false )
	public TFilm gettFilm() {
		return this.tFilm;
	}

	public void settFilm(TFilm tFilm) {
		this.tFilm = tFilm;
	}
	
	@Column(name = "COPY_TYPE", length = 20)
	public String getCopyType() {
		return this.copyType;
	}

	public void setCopyType(String copyType) {
		this.copyType = copyType;
	}

	@Column(name = "COPY_NO", length = 50)
	public String getCopyNo() {
		return this.copyNo;
	}

	public void setCopyNo(String copyNo) {
		this.copyNo = copyNo;
	}

	@Column(name = "ENTER_TIME")
	public Date getEnterTime() {
		return this.enterTime;
	}

	public void setEnterTime(Date enterTime) {
		this.enterTime = enterTime;
	}

	@Column(name = "INSTOCK")
	public Boolean getInstock() {
		return this.instock == null ? false : this.instock;
	}

	public void setInstock(Boolean instock) {
		this.instock = instock;
	}

	@Column(name = "BACK_FROM_CINEMA_ID", precision = 38, scale = 0)
	public Long getBackFromCinemaId() {
		return this.backFromCinemaId;
	}

	public void setBackFromCinemaId(Long backFromCinemaId) {
		this.backFromCinemaId = backFromCinemaId;
	}

	@Column(name = "CART_NO", length = 4)
	public String getCartNo() {
		return this.cartNo;
	}

	public void setCartNo(String cartNo) {
		this.cartNo = cartNo;
	}

	@Column(name = "SLOT_NO", precision = 5, scale = 0)
	public Integer getSlotNo() {
		return this.slotNo;
	}

	public void setSlotNo(Integer slotNo) {
		this.slotNo = slotNo;
	}

	@Column(name = "SHOW_COUNT", precision = 5, scale = 0)
	public Integer getShowCount() {
		return this.showCount;
	}

	public void setShowCount(Integer showCount) {
		this.showCount = showCount;
	}

	@Column(name = "DAMAGE", length = 2)
	public String getDamage() {
		return this.damage;
	}

	public void setDamage(String damage) {
		this.damage = damage;
	}

	@Column(name = "COUNT", precision = 5, scale = 0)
	public Integer getCount() {
		return this.count;
	}

	public void setCount(Integer count) {
		this.count = count;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tFilmCopy")
	@OrderBy("receiveDate desc")
	public Set<TFilmCopySchedule> gettFilmCopySchedules() {
		return this.tFilmCopySchedules;
	}

	public void settFilmCopySchedules(Set<TFilmCopySchedule> tFilmCopySchedules) {
		this.tFilmCopySchedules = tFilmCopySchedules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tFilmCopy")
	public Set<TFilmCopyTrackLog> gettFilmCopyTrackLogs() {
		return this.tFilmCopyTrackLogs;
	}

	public void settFilmCopyTrackLogs(Set<TFilmCopyTrackLog> tFilmCopyTrackLogs) {
		this.tFilmCopyTrackLogs = tFilmCopyTrackLogs;
	}
	@Column(name = "MEDIUM", precision = 5, scale = 0)
	public String getMedium() {
		return this.medium;
	}

	public void setMedium(String medium) {
		this.medium = medium;
	}
	
	@Column(name = "COPY_FROM", length = 20)
	public String getCopyFrom() {
		return this.copyFrom;
	}

	public void setCopyFrom(String copyFrom) {
		this.copyFrom = copyFrom;
	}
	

	@Column(name = "LANGUAGE", length = 20)
	public String getLanguage() {
		if(StringUtils.isNotBlank(language)){
			this.languages = StringUtils.split(language, ',');
		}
		return this.language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	@Transient
	public String[] getLanguages() {
		if(StringUtils.isNotBlank(language)){
			languages = StringUtils.split(language, ',');
		}
		return languages;
	}

	public void setLanguages(String[] languages) {
		this.language = StringUtils.join(languages, ',');
	}

	@ManyToOne(fetch = FetchType.LAZY )
	@JoinColumn(name = "BACK_FROM_CINEMA_ID",insertable=false,updatable=false )
	public TCinema getBackFromCinema() {
		return backFromCinema;
	}
	public void setBackFromCinema(TCinema backFromCinema) {
		this.backFromCinema = backFromCinema;
	}

	@NotNull(message="影片不可为空!")
	@Column(name = "FILM_ID" )
	public Long getFilmId() {
		return filmId;
	}


	public void setFilmId(Long filmId) {
		this.filmId = filmId;
	}


	//@NotNull(message="供片商不可为空!")
	@Column(name="SUPPLY_PUBLISHER_ID",precision = 38, scale = 0)
	public Long getSupplyPublisherId() {
		return supplyPublisherId;
	}


	public void setSupplyPublisherId(Long supplyPublisherId) {
		this.supplyPublisherId = supplyPublisherId;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUPPLY_PUBLISHER_ID",insertable=false,updatable=false)
	public TPublisher getSupplyPublisher() {
		return supplyPublisher;
	}


	public void setSupplyPublisher(TPublisher supplyPublisher) {
		this.supplyPublisher = supplyPublisher;
	}
}
