package com.wanda.ccs.model;

// Generated 2011-10-26 19:16:53 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.xcesys.extras.core.dao.model.VersionableEntity;

/**
 * TReqTicketType generated by hbm2java
 */
@Entity
@Table(name = "T_REQ_TICKET_TYPE")
public class TReqTicketType extends VersionableEntity implements
		java.io.Serializable {
	private static final long serialVersionUID = -2994482934646860622L;
	
	private Long id;
	private String reqType;
	private String reqStatus;
	private String reqRegion;
	private Long reqCinema;
	private TTicketType tTicketType;
	private Long ticketTypeId;
	private String typeCategory;
	private Integer basePrice = 0;
	private String typeName;
	private String typeCode;
	private String ownerRegion;
	private Long ownerCinema;
	private String description;
	private String typeType = "01";
	private String typeGroup = "12"; //票类分类
	private TMarketingCampaign tMarketingCampaign;
	private String typeLevel;
	private String approveById; // 审核人
	private String approveBy; // 审核人
	private Date approveDate; // 审核时间
	private String submitById; // 提交人
	private String submitBy; // 提交人
	private Date submitDate; // 提交时间
	private String limitDefault = "Y";
	private String useDefault = "Y";
	private String paymentDefault = "Y";
	private TReqCardType tReqCardType;
	private String oaId;
	private Long marketingCampaignId; //营销活动的编号 
	private Long roundLimit = 0l;//每场可购票数
	private String needAuthorize = "N"; //票类的二次修改授权标识  4.16 lujx
	private List<TReqTtypeLimitRule> tReqTtypeLimitRules = new ArrayList<TReqTtypeLimitRule>(
			0);
	private List<TReqTtypeCinema> tReqTtypeCinemas = new ArrayList<TReqTtypeCinema>(
			0);
	private List<TReqTtypeUseRule> tReqTtypeUseRules = new ArrayList<TReqTtypeUseRule>(
			0);
	private List<TReqCardTicketType> tReqCardTicketTypes = new ArrayList<TReqCardTicketType>();
	private List<TReqVoucherTicketType> tReqVoucherTicketTypes = new ArrayList<TReqVoucherTicketType>();
	private List<TReqTicketTypePaymentCard> tReqTicketPayCards = new ArrayList<TReqTicketTypePaymentCard>();
	private List<TReqTicketTypePaymentVoucher> tReqTicketPayVouchers = new ArrayList<TReqTicketTypePaymentVoucher>();

	public TReqTicketType() {
	}

	public TReqTicketType(TTicketType type) {
		if (type != null) {
			this.setTypeCategory(type.getTypeCategory());
			this.setTypeName(type.getTypeName());
			this.setTypeCode(type.getTypeCode());
			this.setOwnerRegion(type.getOwnerRegion());
			this.setOwnerCinema(type.getOwnerCinema());
			this.setDescription(type.getDescription());
			this.setMarketingCampaignId(type.getMarketingCampaignId());
			this.setTypeLevel(type.getTypeLevel());
			this.setTypeType(type.getTypeType());
			this.setTypeGroup(type.getTypeGroup());
			this.setBasePrice(type.getBasePrice());
			this.setNeedAuthorize(type.getNeedAuthorize());
			this.setOaId(type.getOaId());
			if (type.getId() != null && type.getId() > 0) {
				ticketTypeId = type.getId();
				tTicketType = type;
			}
		}
	}

	public TReqTicketType(String typeCategory, String typeName,
			String typeCode, String typeLevel, String reqStatus, String reqType) {
		this.typeCategory = typeCategory;
		this.typeName = typeName;
		this.typeCode = typeCode;
		this.typeLevel = typeLevel;
		this.reqStatus = reqStatus;
		this.reqType = reqType;
	}

	public TReqTicketType(TMarketingCampaign tMarketingCampaign,
			TTicketType tTicketType, String typeCategory, String typeName,
			String typeCode, String typeLevel, String ownerRegion,
			Long ownerCinema, String reqStatus, String reqType,
			String reqRegion, Long reqCinema, String description,
			TReqCardType tReqCardType,Long roundLimit,String needAuthorize,
			List<TReqTtypeLimitRule> tReqTtypeLimitRules,
			List<TReqTtypeCinema> tReqTtypeCinemas,
			List<TReqTtypeUseRule> tReqTtypeUseRules,
			List<TReqTicketTypePaymentCard> tReqTicketPayCards,
			List<TReqTicketTypePaymentVoucher> tReqTicketPayVouchers) {
		this.tMarketingCampaign = tMarketingCampaign;
		this.tTicketType = tTicketType;
		this.typeCategory = typeCategory;
		this.typeName = typeName;
		this.typeCode = typeCode;
		this.typeLevel = typeLevel;
		this.ownerRegion = ownerRegion;
		this.ownerCinema = ownerCinema;
		this.reqStatus = reqStatus;
		this.reqType = reqType;
		this.reqRegion = reqRegion;
		this.reqCinema = reqCinema;
		this.description = description;
		this.roundLimit = roundLimit;
		this.needAuthorize = needAuthorize;
		this.tReqCardType = tReqCardType;
		this.tReqTtypeLimitRules = tReqTtypeLimitRules;
		this.tReqTtypeCinemas = tReqTtypeCinemas;
		this.tReqTtypeUseRules = tReqTtypeUseRules;
		this.tReqTicketPayCards = tReqTicketPayCards;
		this.tReqTicketPayVouchers = tReqTicketPayVouchers;
	}

	@SequenceGenerator(name = "generator", sequenceName = "S_T_REQUEST", allocationSize = 1)
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "REQ_TICKET_TYPE_ID", unique = true, nullable = false, precision = 38, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MARKETING_CAMPAIGN_ID", insertable = false, updatable = false)
	public TMarketingCampaign gettMarketingCampaign() {
		return this.tMarketingCampaign;
	}

	public void settMarketingCampaign(TMarketingCampaign tMarketingCampaign) {
		this.tMarketingCampaign = tMarketingCampaign;
	}
	
	@Column(name = "MARKETING_CAMPAIGN_ID")
	public Long getMarketingCampaignId() {
		return marketingCampaignId;
	}

	public void setMarketingCampaignId(Long marketingCampaignId) {
		this.marketingCampaignId = marketingCampaignId;
	}

	@Column(name = "TICKET_TYPE_ID", nullable = false)
	public Long getTicketTypeId() {
		return ticketTypeId;
	}

	public void setTicketTypeId(Long ticketTypeId) {
		this.ticketTypeId = ticketTypeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TICKET_TYPE_ID", insertable = false, updatable = false)
	public TTicketType gettTicketType() {
		return this.tTicketType;
	}

	public void settTicketType(TTicketType tTicketType) {
		this.tTicketType = tTicketType;
	}

	@Column(name = "TYPE_CATEGORY", nullable = false, length = 1)
	public String getTypeCategory() {
		return this.typeCategory;
	}

	public void setTypeCategory(String typeCategory) {
		this.typeCategory = typeCategory;
	}

	@Column(name = "TYPE_NAME", nullable = false, length = 3072)
	public String getTypeName() {
		return this.typeName;
	}

	public void setTypeName(String typeName) {
		this.typeName = typeName;
	}

	@Column(name = "TYPE_CODE", nullable = false, length = 200)
	public String getTypeCode() {
		return this.typeCode;
	}

	public void setTypeCode(String typeCode) {
		this.typeCode = typeCode;
	}

	@Column(name = "TYPE_LEVEL", nullable = false, length = 1)
	public String getTypeLevel() {
		return this.typeLevel;
	}

	public void setTypeLevel(String typeLevel) {
		this.typeLevel = typeLevel;
	}

	@Column(name = "OWNER_REGION", length = 20)
	public String getOwnerRegion() {
		return this.ownerRegion;
	}

	public void setOwnerRegion(String ownerRegion) {
		this.ownerRegion = ownerRegion;
	}

	@Column(name = "OWNER_CINEMA", precision = 38, scale = 0)
	public Long getOwnerCinema() {
		return this.ownerCinema;
	}

	public void setOwnerCinema(Long ownerCinema) {
		this.ownerCinema = ownerCinema;
	}

	@Column(name = "REQ_STATUS", nullable = false, length = 1)
	public String getReqStatus() {
		return this.reqStatus;
	}

	public void setReqStatus(String reqStatus) {
		this.reqStatus = reqStatus;
	}

	@Column(name = "REQ_TYPE", nullable = false, length = 1)
	public String getReqType() {
		return this.reqType;
	}

	public void setReqType(String reqType) {
		this.reqType = reqType;
	}

	@Column(name = "REQ_REGION", length = 100)
	public String getReqRegion() {
		return this.reqRegion;
	}

	public void setReqRegion(String reqRegion) {
		this.reqRegion = reqRegion;
	}

	@Column(name = "REQ_CINEMA", precision = 38, scale = 0)
	public Long getReqCinema() {
		return this.reqCinema;
	}

	public void setReqCinema(Long reqCinema) {
		this.reqCinema = reqCinema;
	}

	@Column(name = "DESCRIPTION", length = 2000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "tReqTicketType")
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	public TReqCardType getTReqCardType() {
		return this.tReqCardType;
	}

	public void setTReqCardType(TReqCardType TReqCardType) {
		this.tReqCardType = TReqCardType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tReqTicketType")
	@OrderBy("ruleOrder")
	public List<TReqTtypeLimitRule> gettReqTtypeLimitRules() {
		return this.tReqTtypeLimitRules;
	}

	public void settReqTtypeLimitRules(
			List<TReqTtypeLimitRule> tReqTtypeLimitRules) {
		this.tReqTtypeLimitRules = tReqTtypeLimitRules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tReqTicketType")
	@OrderBy("cinema")
	public List<TReqTtypeCinema> gettReqTtypeCinemas() {
		return this.tReqTtypeCinemas;
	}

	public void settReqTtypeCinemas(List<TReqTtypeCinema> tReqTtypeCinemas) {
		this.tReqTtypeCinemas = tReqTtypeCinemas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tReqTicketType")
	@OrderBy("ruleOrder")
	public List<TReqTtypeUseRule> gettReqTtypeUseRules() {
		return this.tReqTtypeUseRules;
	}

	public void settReqTtypeUseRules(List<TReqTtypeUseRule> tReqTtypeUseRules) {
		this.tReqTtypeUseRules = tReqTtypeUseRules;
	}

	@Column(name = "APPROVE_BY", length = 40)
	public String getApproveBy() {
		return approveBy;
	}

	public void setApproveBy(String approveBy) {
		this.approveBy = approveBy;
	}

	@Column(name = "APPROVE_DATE")
	public Date getApproveDate() {
		return approveDate;
	}

	public void setApproveDate(Date approveDate) {
		this.approveDate = approveDate;
	}

	@Column(name = "SUBMIT_BY", length = 40)
	public String getSubmitBy() {
		return submitBy;
	}

	public void setSubmitBy(String submitBy) {
		this.submitBy = submitBy;
	}

	@Column(name = "SUBMIT_DATE")
	public Date getSubmitDate() {
		return submitDate;
	}

	public void setSubmitDate(Date submitDate) {
		this.submitDate = submitDate;
	}

	@Column(name = "LIMIT_DEFAULT", nullable = false)
	public String getLimitDefault() {
		return limitDefault;
	}

	public void setLimitDefault(String limitDefault) {
		this.limitDefault = limitDefault;
	}

	@Column(name = "USE_DEFAULT", nullable = false)
	public String getUseDefault() {
		return useDefault;
	}

	public void setUseDefault(String useDefault) {
		this.useDefault = useDefault;
	}
	
	@Column(name = "PAYMENT_DEFAULT", nullable = false)
	public String getPaymentDefault() {
		return paymentDefault;
	}

	public void setPaymentDefault(String paymentDefault) {
		this.paymentDefault = paymentDefault;
	}

	@Column(name = "TYPE_TYPE", length = 10)
	public String getTypeType() {
		return typeType;
	}

	public void setTypeType(String typeType) {
		this.typeType = typeType;
	}

	@Column(name = "TYPE_GROUP", length = 10)
	public String getTypeGroup() {
		return typeGroup;
	}

	public void setTypeGroup(String typeGroup) {
		this.typeGroup = typeGroup;
	}
	
	@Column(name = "APPROVE_BY_ID", length = 20)
	public String getApproveById() {
		return approveById;
	}

	public void setApproveById(String approveById) {
		this.approveById = approveById;
	}

	@Column(name = "SUBMIT_BY_ID", length = 20)
	public String getSubmitById() {
		return submitById;
	}

	public void setSubmitById(String submitById) {
		this.submitById = submitById;
	}
	
	@Column(name = "OA_ID", length = 100)
	public String getOaId() {
		return oaId;
	}

	public void setOaId(String oaId) {
		this.oaId = oaId;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tReqTicketType")
	@OrderBy("cardTypeId")
	@Fetch(FetchMode.SUBSELECT)
	public List<TReqCardTicketType> gettReqCardTicketTypes() {
		return tReqCardTicketTypes;
	}

	public void settReqCardTicketTypes(List<TReqCardTicketType> tReqCardTicketTypes) {
		this.tReqCardTicketTypes = tReqCardTicketTypes;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tReqTicketType")
	@OrderBy("voucherTypeId")
	@Fetch(FetchMode.SUBSELECT)
	public List<TReqVoucherTicketType> gettReqVoucherTicketTypes() {
		return tReqVoucherTicketTypes;
	}

	public void settReqVoucherTicketTypes(
			List<TReqVoucherTicketType> tReqVoucherTicketTypes) {
		this.tReqVoucherTicketTypes = tReqVoucherTicketTypes;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tReqTicketType")
	@OrderBy("cardTypeId")
	@Fetch(FetchMode.SUBSELECT)
	public List<TReqTicketTypePaymentCard> gettReqTicketPayCards() {
		return tReqTicketPayCards;
	}

	public void settReqTicketPayCards(
			List<TReqTicketTypePaymentCard> tReqTicketPayCards) {
		this.tReqTicketPayCards = tReqTicketPayCards;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tReqTicketType")
	@OrderBy("voucherTypeId")
	@Fetch(FetchMode.SUBSELECT)
	public List<TReqTicketTypePaymentVoucher> gettReqTicketPayVouchers() {
		return tReqTicketPayVouchers;
	}

	public void settReqTicketPayVouchers(
			List<TReqTicketTypePaymentVoucher> tReqTicketPayVouchers) {
		this.tReqTicketPayVouchers = tReqTicketPayVouchers;
	}
	
	@Column(name = "BASE_PRICE")
	public Integer getBasePrice() {
		return basePrice;
	}

	public void setBasePrice(Integer basePrice) {
		this.basePrice = basePrice;
	}
	
	@Column(name = "ROUND_LIMIT", nullable = true, precision = 10)
	public Long getRoundLimit() {
		return roundLimit;
	}

	public void setRoundLimit(Long roundLimit) {
		this.roundLimit = roundLimit;
	}
	
	@Column(name = "NEED_AUTHORIZE", length = 1)
	public String getNeedAuthorize() {
		return needAuthorize;
	}

	public void setNeedAuthorize(String needAuthorize) {
		this.needAuthorize = needAuthorize;
	}

}
