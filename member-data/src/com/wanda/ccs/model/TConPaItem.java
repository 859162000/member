package com.wanda.ccs.model;

// Generated Dec 5, 2012 1:48:48 PM by Hibernate Tools 3.4.0.CR1

import com.xcesys.extras.core.dao.model.VersionableEntity;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * TConPaItem generated by hbm2java
 */
@Entity
@Table(name = "T_CON_PA_ITEM")
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
public class TConPaItem extends VersionableEntity implements
		java.io.Serializable {
	private static final long serialVersionUID = 6229809673421740049L;

	private Long id;
	private Long conPaId;
	private TConPa tConPa;
	private TConItem tConItem;
	private Long conItemId;
	private Long parentConPaId;
	private TConPa parentConPa;
	private Float unitPrice;
	private String unit;
	private String comments;
	private Boolean deleted;
	
	public TConPaItem() {
		deleted = Boolean.FALSE;
	}

	@SequenceGenerator(name = "generator", sequenceName = "S_T_CON_PA_ITEM", allocationSize = 20)
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "CON_PA_ITEM_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_PA_ID", nullable = false)
	public TConPa gettConPa() {
		return this.tConPa;
	}

	public void settConPa(TConPa tConPa) {
		this.tConPa = tConPa;
	}

	@Column(name = "CON_ITEM_ID", nullable = false, precision = 22, scale = 0)
	public Long getConItemId() {
		return this.conItemId;
	}

	public void setConItemId(Long conItemId) {
		this.conItemId = conItemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_ITEM_ID", insertable = false, updatable = false)
	public TConItem gettConItem() {
		return tConItem;
	}

	public void settConItem(TConItem tConItem) {
		this.tConItem = tConItem;
	}

	@Column(name = "PARENT_CON_PA_ID", precision = 22, scale = 0)
	public Long getParentConPaId() {
		return this.parentConPaId;
	}

	public void setParentConPaId(Long parentConPaId) {
		this.parentConPaId = parentConPaId;
	}

	@Column(name = "UNIT_PRICE", nullable = false, precision = 10)
	public Float getUnitPrice() {
		return this.unitPrice;
	}

	public void setUnitPrice(Float unitPrice) {
		this.unitPrice = unitPrice;
	}

	@Column(name = "UNIT", nullable = false, length = 20)
	public String getUnit() {
		return this.unit;
	}

	public void setUnit(String unit) {
		this.unit = unit;
	}

	@Column(name = "COMMENTS", length = 400)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT_CON_PA_ID", insertable = false, updatable = false)
	public TConPa getParentConPa() {
		return parentConPa;
	}

	public void setParentConPa(TConPa parentConPa) {
		this.parentConPa = parentConPa;
	}
	
	
	@Column(name="DELETED")
	public Boolean getDeleted() {
		return deleted;
	}

	public void setDeleted(Boolean valid) {
		this.deleted = valid;
	}

	@Column(name = "CON_PA_ID", insertable = false , updatable = false)
	public Long getConPaId() {
		return conPaId;
	}

	public void setConPaId(Long conPaId) {
		this.conPaId = conPaId;
	}

}
