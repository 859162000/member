package com.wanda.ccs.model;

// Generated 2011-11-9 15:27:52 by Hibernate Tools 3.2.4.GA

import static javax.persistence.GenerationType.SEQUENCE;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import com.xcesys.extras.core.dao.model.VersionableEntity;

/**
 * TScheduleParam generated by hbm2java
 */
@Entity
@Table(name = "T_SCHEDULE_PARAM")
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
public class TScheduleParam extends VersionableEntity implements
		java.io.Serializable {
	private static final long serialVersionUID = 2018089343460255050L;
	private Long id;
	private String region;
	private Long cinemaId;
	private Long cityId;
	private String hallType;
	private Long filmId;
	private TFilm film;
	private TCinema cinema;
	private Integer adTime;// 广告时间
	private TPriceBase primePrice;
	private Long primePriceId;
	private TCity city;
	private Integer inTime;// 进场时长
	private Integer outTime;// 散场时长

	public TScheduleParam() {
	}

	@Min(value = 0, message = "广告时间不能为负数.")
	@Column(name = "AD_TIME", precision = 22)
	public Integer getAdTime() {
		return this.adTime;
	}

	@Transient
	public Integer getOverallTime() {
		if (this.getFilm() != null && this.getFilm().getRunningTime() != null) {
			return this.getFilm().getRunningTime().intValue() + this.adTime;
		}
		return this.adTime;
	}

	@Column(name = "CINEMA_ID")
	public Long getCinemaId() {
		return cinemaId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CITY_ID", insertable = false, updatable = false)
	public TCity getCity() {
		return this.city;
	}

	@Column(name = "CITY_ID")
	public Long getCityId() {
		return cityId;
	}

	@Column(name = "FILM_ID")
	public Long getFilmId() {
		return filmId;
	}

	@SequenceGenerator(name = "generator", sequenceName = "S_T_SCHEDULE_PARAM")
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "SEQID", unique = true, nullable = false, precision = 38, scale = 0)
	public Long getId() {
		return this.id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRIME_PRICE_ID", nullable = false, insertable = false, updatable = false)
	public TPriceBase getPrimePrice() {
		return this.primePrice;
	}

	@NotNull(message = "必须输入基准价格")
	@Column(name = "PRIME_PRICE_ID", nullable = false)
	public Long getPrimePriceId() {
		return primePriceId;
	}

	@Column(name = "REGION", length = 2)
	public String getRegion() {
		return this.region;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CINEMA_ID", insertable = false, updatable = false)
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	public TCinema getCinema() {
		return this.cinema;
	}

	@NotNull(message = "必须选择一部影片")
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FILM_ID", insertable = false, updatable = false)
	@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
	public TFilm getFilm() {
		return this.film;
	}
	@Min(value = 0, message = "进场时长不能为负数.")
	@Column(name = "IN_TIME", precision = 5)
	public Integer getInTime() {
		return inTime;
	}
	@Min(value = 0, message = "散场时长不能为负数.")
	@Column(name = "OUT_TIME", precision = 5)
	public Integer getOutTime() {
		return outTime;
	}
	@Column(name="HALL_TYPE")
	public String getHallType() {
		return hallType;
	}

	public void setInTime(Integer inTime) {
		this.inTime = inTime;
		if(inTime == null ){
			this.inTime = 10;
		}
	}

	public void setOutTime(Integer outTime) {
		this.outTime = outTime;
		if(outTime == null){
			this.outTime = 5;
		}
	}

	public void setAdTime(Integer advertisementTime) {
		this.adTime = advertisementTime;
	}

	public void setCinemaId(Long cinemaId) {
		this.cinemaId = cinemaId;
	}

	public void setCity(TCity tCity) {
		this.city = tCity;
	}

	public void setCityId(Long cityId) {
		this.cityId = cityId;
	}

	public void setFilmId(Long filmId) {
		this.filmId = filmId;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public void setPrimePrice(TPriceBase tPriceBase) {
		this.primePrice = tPriceBase;
	}

	public void setPrimePriceId(Long primePriceId) {
		this.primePriceId = primePriceId;
	}

	public void setRegion(String region) {
		this.region = region;
	}

	public void setCinema(TCinema tCinema) {
		this.cinema = tCinema;
	}

	public void setFilm(TFilm tFilm) {
		this.film = tFilm;
	}

	@Override
	public String toString() {
		return film + "，" 
				+ (this.city==null?"所有城市":this.city) + "，"
				+ (this.cinema==null?"所有影城":this.cinema) + "，"
				+ (this.primePrice == null ? 0 : this.primePrice);
	}

	public void setHallType(String hallType) {
		this.hallType = hallType;
	}
}
