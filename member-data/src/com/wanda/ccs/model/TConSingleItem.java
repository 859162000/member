package com.wanda.ccs.model;

// Generated Nov 30, 2012 1:59:30 PM by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import com.xcesys.extras.core.dao.model.VersionableEntity;

/**
 * TConSingleItem generated by hbm2java
 * 单品管理
 */
@Entity
@Table(name = "T_CON_SINGLE_ITEM")
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
public class TConSingleItem extends VersionableEntity implements
		java.io.Serializable {
	private static final long serialVersionUID = -2659273753255755031L;
	
	private Long id;
	private TConBrand tConBrand;//品牌
	private TConItem tConItem;//
	private String purchaseType;//采购类型
	private String unit;//计量单位
	private String singleItemDesc;//单品描述
	private String spec;//规格型号
	private Long conBrandId;//品牌id
	private boolean isSuit;
	private List<TConItemStorage> tConItemStorages = new ArrayList<TConItemStorage>();

	public TConSingleItem() {
	}
	public TConSingleItem(TConSingleItem conSingleItem) {
		if(conSingleItem == null)
			return ;
		this.tConBrand = conSingleItem.gettConBrand();
		this.purchaseType = conSingleItem.getPurchaseType();
		this.singleItemDesc = conSingleItem.getSingleItemDesc();
		this.spec = conSingleItem.getSpec();
		this.conBrandId = conSingleItem.getConBrandId();
		this.tConItem = new TConItem(conSingleItem.gettConItem());
		this.setUnit(conSingleItem.getUnit());
	}
	
	public void copy(TConSingleItem conSingleItem){
		if(conSingleItem == null)
			return;
		this.tConBrand = conSingleItem.gettConBrand();
		this.purchaseType = conSingleItem.getPurchaseType();
		this.setUnit(conSingleItem.getUnit());
		this.singleItemDesc = conSingleItem.getSingleItemDesc();
		this.spec = conSingleItem.getSpec();
		this.conBrandId = conSingleItem.getConBrandId();
		this.tConItem.copy(conSingleItem.gettConItem());
	}
	
	public TConSingleItem(TConBrand tConBrand, TConItem tConItem,
			String purchaseType, String unit, String singleItemDesc,
			String spec) {
		this.tConBrand = tConBrand;
		this.tConItem = tConItem;
		this.purchaseType = purchaseType;
		this.setUnit(unit);
		this.singleItemDesc = singleItemDesc;
		this.spec = spec;
//		this.imageFileId = imageFileId;
	}
	@Id
	@Column(name = "CON_ITEM_ID")
	@GeneratedValue(generator = "foreigner")
	@GenericGenerator(name = "foreigner", strategy = "foreign", parameters = { @Parameter(name = "property", value = "tConItem") })
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_BRAND_ID", updatable = false, insertable = false)
	public TConBrand gettConBrand() {
		return this.tConBrand;
	}

	public void settConBrand(TConBrand tConBrand) {
		this.tConBrand = tConBrand;
	}
	
	@Column(name = "CON_BRAND_ID")
	public Long getConBrandId() {
		return conBrandId;
	}
	public void setConBrandId(Long conBrandId) {
		this.conBrandId = conBrandId;
	}
	
	@OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@PrimaryKeyJoinColumn
	public TConItem gettConItem() {
		return this.tConItem;
	}

	public void settConItem(TConItem tConItem) {
		this.tConItem = tConItem;
	}

	@Column(name = "PURCHASE_TYPE", length = 20)
	public String getPurchaseType() {
		return this.purchaseType;
	}

	public void setPurchaseType(String purchaseType) {
		this.purchaseType = purchaseType;
	}

	@Transient
	public String getUnit() {
		this.unit = this.gettConItem().getUnit();
		return this.unit;
				
	}

	public void setUnit(String unit) {
		this.unit = unit;
		this.gettConItem().setUnit(unit);
	}

	@Column(name = "SINGLE_ITEM_DESC", length = 2048)
	public String getSingleItemDesc() {
		return this.singleItemDesc;
	}

	public void setSingleItemDesc(String singleItemDesc) {
		this.singleItemDesc = singleItemDesc;
	}

	@Column(name = "SPEC", length = 2048)
	public String getSpec() {
		return this.spec;
	}

	public void setSpec(String spec) {
		this.spec = spec;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tConSingleItem")
	public List<TConItemStorage> gettConItemStorages() {
		return tConItemStorages;
	}
	public void settConItemStorages(List<TConItemStorage> tConItemStorages) {
		this.tConItemStorages = tConItemStorages;
	}
	
	@Transient
	public boolean isSuit() {
		return isSuit;
	}
	public void setSuit(boolean isSuit) {
		this.isSuit = isSuit;
	}
}
