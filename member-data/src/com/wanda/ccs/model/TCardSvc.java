package com.wanda.ccs.model;

// Generated 2011-11-2 12:36:06 by Hibernate Tools 3.2.4.GA

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import com.xcesys.extras.core.dao.model.VersionableEntity;

/**
 * TCardSvc generated by hbm2java
 */
@Entity
@Table(name = "T_CARD_SVC")
public class TCardSvc extends VersionableEntity implements java.io.Serializable {
	private static final long serialVersionUID = 6388973827665588805L;

	private Long id;
	private TCard tCardByCardId;// 卡编号
	private TCinema tCinema;
	private TCard tCardByNewCardId;// 对于更换卡或者卡升级：新的卡号
	private String svcType;// 服务类型：预制、发放、充值、修改资料、挂失、换卡、补卡、卡升级、取消挂失、退卡、销卡
	private Float custPay = 0f;// 客户支付金额
	private Float balChange = 0f;// 卡余额变化
	private Float balBefore = 0f;// 服务前卡余额
	private Float balAfter = 0f;// 服务后卡余额
	private String remarks;// 备注
	private String channel ="总部系统";// 服务渠道
	private String servicedBy;// 提供服务的用户
	private Date servicedTime;// 服务时间
	private Long cardId;// 卡编号
	private Long cinemaId;// 影城Id
	private Long newCardId;// 新的卡号
	private String payMethod;// 支付方式 S - 现金 C - 信用卡 Q - 支票
	private String payId; // 用信用卡或支票支付时的信用卡号或支票号
	private String servicedByName;// 提供服务的用户
	private Long issueFee;// 办理过程中收取的工本费
	private Long activationFee;// 办理过程中收取的激活费
	private String authorizedBy;// 如果业务经过二次授权，授权的用户的id
	private String authorizedbyName;// 如果业务经过二次授权，授权的用户姓名
	private String opGroup;// 工作站组
	private String opStation;// 工作站
	private boolean dispNewCard;
	private String nocardAuthby;      
	private String nocardAuthByName;
	public TCardSvc() {
	}
	
	public TCardSvc(TCardSvc cardSvc) {
		setPayMethod(cardSvc.getPayMethod());
		setPayId(cardSvc.getPayId());
		setIssueFee(cardSvc.getIssueFee());
		setSvcType(cardSvc.getSvcType());
		setBalChange(cardSvc.getBalChange());
		setBalAfter(cardSvc.getBalAfter());
		setCustPay(cardSvc.getCustPay());
		setServicedBy(cardSvc.getServicedBy());
		setServicedByName(cardSvc.getServicedByName());
		setCinemaId(cardSvc.getCinemaId());
	}

	public TCardSvc(TCard tCardByCardId, String svcType, Float custPay,
			Float balChange, Float balBefore, String channel, Date servicedTime) {
		this.tCardByCardId = tCardByCardId;
		this.svcType = svcType;
		this.custPay = custPay;
		this.balChange = balChange;
		this.balBefore = balBefore;
		this.channel = channel;
		this.servicedTime = servicedTime;
	}

	public TCardSvc(TCard tCardByCardId, TCinema tCinema,
			TCard tCardByNewCardId, String svcType, Float custPay,
			Float balChange, Float balBefore, Float balAfter, String remarks,
			String channel, String servicedBy, String servicedByName,
			Date servicedTime, Long cardId, Long cinemaId, Long newCardId) {
		this.tCardByCardId = tCardByCardId;
		this.tCinema = tCinema;
		this.tCardByNewCardId = tCardByNewCardId;
		this.svcType = svcType;
		this.custPay = custPay;
		this.balChange = balChange;
		this.balBefore = balBefore;
		this.balAfter = balAfter;
		this.remarks = remarks;
		this.channel = channel;
		this.servicedBy = servicedBy;
		this.servicedTime = servicedTime;
		this.cardId = cardId;
		this.cinemaId = cinemaId;
		this.newCardId = newCardId;
		this.servicedByName = servicedByName;
	}

	@SequenceGenerator(name = "generator", sequenceName = "S_T_CARD_SVC", allocationSize = 1)
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "CARD_SERVICE_ID", unique = true, nullable = false, precision = 38, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CARD_ID", nullable = false, insertable = false, updatable = false)
	public TCard gettCardByCardId() {
		return this.tCardByCardId;
	}

	public void settCardByCardId(TCard tCardByCardId) {
		this.tCardByCardId = tCardByCardId;
	}

	@Column(name = "CARD_ID", nullable = false)
	public Long getCardId() {
		return cardId;
	}

	public void setCardId(Long cardId) {
		this.cardId = cardId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CINEMA", insertable = false, updatable = false)
	public TCinema gettCinema() {
		return this.tCinema;
	}

	public void settCinema(TCinema tCinema) {
		this.tCinema = tCinema;
	}

	@Column(name = "CINEMA")
	public Long getCinemaId() {
		return this.cinemaId;
	}

	public void setCinemaId(Long cinemaId) {
		this.cinemaId = cinemaId;
	}

	@Column(name = "ISSUE_FEE")
	public Long getIssueFee() {
		return issueFee;
	}

	public void setIssueFee(Long issueFee) {
		this.issueFee = issueFee;
	}

	@Column(name = "ACTIVATION_FEE")
	public Long getActivationFee() {
		return activationFee;
	}

	public void setActivationFee(Long activationFee) {
		this.activationFee = activationFee;
	}

	@Column(name = "AUTHORIZED_BY", length = 50)
	public String getAuthorizedBy() {
		return authorizedBy;
	}

	public void setAuthorizedBy(String authorizedBy) {
		this.authorizedBy = authorizedBy;
	}

	@Column(name = "AUTHORIZED_BY_NAME", length = 100)
	public String getAuthorizedbyName() {
		return authorizedbyName;
	}

	public void setAuthorizedbyName(String authorizedbyName) {
		this.authorizedbyName = authorizedbyName;
	}
	
	@Column(name = "NOCARD_AUTH_BY", length = 50)
	public String getNocardAuthby() {
		return nocardAuthby;
	}

	public void setNocardAuthby(String nocardAuthby) {
		this.nocardAuthby = nocardAuthby;
	}
	
	@Column(name = "NOCARD_AUTH_BY_NAME", length = 100)
	public String getNocardAuthByName() {
		return nocardAuthByName;
	}

	public void setNocardAuthByName(String nocardAuthByName) {
		this.nocardAuthByName = nocardAuthByName;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NEW_CARD_ID", insertable = false, updatable = false)
	public TCard gettCardByNewCardId() {
		return this.tCardByNewCardId;
	}

	public void settCardByNewCardId(TCard tCardByNewCardId) {
		this.tCardByNewCardId = tCardByNewCardId;
	}

	@Column(name = "NEW_CARD_ID")
	public Long getNewCardId() {
		return newCardId;
	}

	public void setNewCardId(Long newCardId) {
		this.newCardId = newCardId;
	}

	@Column(name = "SVC_TYPE", nullable = false, length = 20)
	public String getSvcType() {
		return this.svcType;
	}

	public void setSvcType(String svcType) {
		this.svcType = svcType;
	}

	@Column(name = "CUST_PAY", nullable = false, precision = 10)
	public Float getCustPay() {
		return this.custPay;
	}

	public void setCustPay(Float custPay) {
		this.custPay = custPay;
	}

	@Column(name = "BAL_CHANGE", nullable = false, precision = 10)
	public Float getBalChange() {
		return this.balChange;
	}

	public void setBalChange(Float balChange) {
		this.balChange = balChange;
	}

	@Column(name = "BAL_BEFORE", nullable = false, precision = 10)
	public Float getBalBefore() {
		return this.balBefore;
	}

	public void setBalBefore(Float balBefore) {
		this.balBefore = balBefore;
	}

	@Column(name = "BAL_AFTER", precision = 10)
	public Float getBalAfter() {
		return this.balAfter;
	}

	public void setBalAfter(Float balAfter) {
		this.balAfter = balAfter;
	}

	@Column(name = "REMARKS", length = 2000)
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Column(name = "CHANNEL", nullable = false, length = 100)
	public String getChannel() {
		return this.channel;
	}

	public void setChannel(String channel) {
		this.channel = channel;
	}

	@Column(name = "SERVICED_BY", length = 100)
	public String getServicedBy() {
		return this.servicedBy;
	}

	public void setServicedBy(String servicedBy) {
		this.servicedBy = servicedBy;
	}

	@Column(name = "SERVICED_TIME", nullable = false, length = 11)
	public Date getServicedTime() {
		return this.servicedTime;
	}

	public void setServicedTime(Date servicedTime) {
		this.servicedTime = servicedTime;
	}

	@Column(name = "PAY_METHOD", length = 1)
	public String getPayMethod() {
		return payMethod;
	}

	public void setPayMethod(String payMethod) {
		this.payMethod = payMethod;
	}

	@Column(name = "PAY_ID", length = 50)
	public String getPayId() {
		return payId;
	}

	public void setPayId(String payId) {
		this.payId = payId;
	}

	@Column(name = "SERVICED_BY_NAME", length = 100)
	public String getServicedByName() {
		return servicedByName;
	}

	public void setServicedByName(String servicedByName) {
		this.servicedByName = servicedByName;
	}

	@Column(name = "OP_GROUP", length = 50)
	public String getOpGroup() {
		return opGroup;
	}

	public void setOpGroup(String opGroup) {
		this.opGroup = opGroup;
	}

	@Column(name = "OP_STATION", length = 50)
	public String getOpStation() {
		return opStation;
	}

	public void setOpStation(String opStation) {
		this.opStation = opStation;
	}

	@Transient
	public boolean isDispNewCard() {
		return dispNewCard;
	}

	public void setDispNewCard(boolean dispNewCard) {
		this.dispNewCard = dispNewCard;
	}

	@Transient
	public Float getDispBalChange() {
		if (!dispNewCard)
			return this.balChange;
		else
			return -this.balChange;

	}

	public void setDispBalChange(Long balChange) {
	}

	@Transient
	public Float getDispBalBefore() {
		if (!dispNewCard)
			return this.balBefore;
		else
			return 0f;
	}

	public void setDispBalBefore(Long balBefore) {
	}

	@Transient
	public Float getDispBalAfter() {
		if (!dispNewCard)
			return this.balAfter;
		else
			return -this.balChange;
	}

	public void setDispBalAfter(Long balAfter) {
	}
	
	@Transient
	public Long getFCustPay(){
		return this.custPay.longValue();
	}
	
	public void setFCustPay(Long custPay) {
		this.custPay = Float.valueOf(custPay.toString());
	}
	
//	@Transient
//	public void setBalChange(Long balChange) {
//		this.balChange = Float.valueOf(balChange.toString());
//	}
	
}