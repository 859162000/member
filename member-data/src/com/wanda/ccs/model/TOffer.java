package com.wanda.ccs.model;

// Generated 2013-5-21 18:55:28 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.SEQUENCE;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.xcesys.extras.core.dao.model.BlameableEntity;
import com.xcesys.extras.core.util.StringUtil;

/**
 * TOffer generated by hbm2java
 * 通知话术
 */
@Entity
@Table(name = "T_OFFER")
public class TOffer extends BlameableEntity implements java.io.Serializable {
	private static final long serialVersionUID = 4903578844969690035L;
	
	private Long id;
	private String offerChannel;//接触渠道
	private Date startTime;//开始时间
	private Date endTime;//结束时间
	private String content;//内容
	private String title;//标题
	private String status;//发送状态
	private Set<TCmnActivity> tCmnActivities = new HashSet<TCmnActivity>(0);
	private Date toldTime;//通知时间
	
	private String strStartTime;
	private String strEndTime;
	private String strToldTime;


	public TOffer() {
	}


	@SequenceGenerator(name = "generator", sequenceName = "S_T_OFFER")
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "OFFER_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}


	@Column(name = "OFFER_CHANNEL", nullable = false, length = 20)
	public String getOfferChannel() {
		return this.offerChannel;
	}

	public void setOfferChannel(String offerChannel) {
		this.offerChannel = offerChannel;
	}

	@Column(name = "START_TIME")
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Column(name = "END_TIME")
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "CONTENT", nullable = false, length = 4000)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "TITLE", length = 256)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "STATUS", length = 2)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tOffer")
	public Set<TCmnActivity> gettCmnActivities() {
		return this.tCmnActivities;
	}

	public void settCmnActivities(Set<TCmnActivity> tCmnActivities) {
		this.tCmnActivities = tCmnActivities;
	}
	
	@Column(name = "TOLD_TIME")
	public Date getToldTime() {
		return toldTime;
	}

	public void setToldTime(Date toldTime) {
		this.toldTime = toldTime;
	}


	
	@Transient
	public String getStrStartTime() {
		if(startTime != null)
			strStartTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(startTime);
		return strStartTime;
	}


	public void setStrStartTime(String strStartTime) {
		try {
			if(!StringUtil.isNullOrBlank(strStartTime))
				startTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(strStartTime);
			else
				startTime = null;
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		this.strStartTime = strStartTime;
	}

	@Transient
	public String getStrEndTime() {
		if(endTime != null)
			strEndTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(endTime);
		return strEndTime;
	}


	public void setStrEndTime(String strEndTime) {
		try {
			if(!StringUtil.isNullOrBlank(strEndTime))
				endTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(strEndTime);
			else
				endTime = null;
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		this.strEndTime = strEndTime;
	}
	
	
	@Transient
	public String getStrToldTime() {
		if(toldTime != null)
			strToldTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(toldTime);
		return strToldTime;
	}

	public void setStrToldTime(String strToldTime) {
		try {
			if(!StringUtil.isNullOrBlank(strToldTime))
				toldTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(strToldTime);
			else
				toldTime = null;
		} catch (ParseException e) {
			e.printStackTrace();
		}
		this.strToldTime = strToldTime;
	}

	
}
