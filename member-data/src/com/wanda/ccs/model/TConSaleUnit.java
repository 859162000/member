package com.wanda.ccs.model;

// Generated Feb 1, 2013 11:23:05 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.SEQUENCE;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.xcesys.extras.core.dao.model.VersionableEntity;
import com.xcesys.extras.core.util.StringUtil;

/**
 * TConSaleUnit generated by hbm2java
 */
@Entity
@Table(name = "T_CON_SALE_UNIT")
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
public class TConSaleUnit extends VersionableEntity implements
		java.io.Serializable {
	private static final long serialVersionUID = -192324882256781823L;
	
	private Long id;
	private TCinema tCinema;
	private Long cinemaId;
	private TConItem tConItem;
	private Long conItemId;
	private String saleUnitCode;//售卖键编码
	private String comments;//备注
	private String saleUnitName;
	private String saleChannel;//'销售渠道(正台销售、副台销售、二次销售、员工特惠、网上销售、其他)';
	private Boolean allowPrepaidCardDiscount = true;//'允许使用储值卡折扣';
	private Boolean allowSaleCategoryDiscount = true;//'允许使用分类折扣';
	private Boolean allowOnlineSale;//'允许网上购买';
	private Boolean bindPrepaidCard;//'绑定储值卡支付方式';
	private Boolean allowAuthorizedSale;//'一次授权进行售卖';
	private Boolean valid = true;//是否有效
	private Float unitPrice;//'售价';
	private String status;//'状态（未下发，修改未下发，已下发）';
	private String timeBegin;//'开始时间（时：分）';
	private String timeEnd;//'结束时间（时：分）';
	private String dateBegin;//'开始日期';
	private String dateEnd;//'结束日期';
	private String timeRuleType = IConDimType.DIMDEF_CON_SALE_UNIT_TIME_RULE_TYPE_NOT_TIME_LIMIT;//'售卖显示时间规则（不限时，区间，周期）';
	private String saleType;//'销售类型（正价销售、促销）';
	private String promotionType;// '活动类型（节假日、电影主题推广、新品促销、员工优惠、经理赠送、减少库存积压、升杯）';
	private Date dDateBegin;
	private Date dDateEnd;
	private Long conSaleUnitGroupId;
	private TConSaleUnitGroup tConSaleUnitGroup;
	private List<TConSaleUnitLog> tConSaleUnitLogs = new ArrayList<TConSaleUnitLog>();
	private String tranSts;//下发状态值
	private String tranFn;//下发文件
	private String tranMsg;//下发状态说明
	private Date tranTime;//下发时间

	public TConSaleUnit() {
	}

	public TConSaleUnit(TCinema tCinema, TConItem tConItem,
			String saleUnitCode, String saleUnitName, String saleChannel,
			Boolean allowPrepaidCardDiscount,
			Boolean allowSaleCategoryDiscount, Boolean allowOnlineSale,
			Boolean bindPrepaidCard, Boolean allowAuthorizedSale,
			Boolean valid, Float unitPrice, String status, String timeRuleType) {
		this.tCinema = tCinema;
		this.tConItem = tConItem;
		this.saleUnitCode = saleUnitCode;
		this.saleUnitName = saleUnitName;
		this.saleChannel = saleChannel;
		this.allowPrepaidCardDiscount = allowPrepaidCardDiscount;
		this.allowSaleCategoryDiscount = allowSaleCategoryDiscount;
		this.allowOnlineSale = allowOnlineSale;
		this.bindPrepaidCard = bindPrepaidCard;
		this.allowAuthorizedSale = allowAuthorizedSale;
		this.valid = valid;
		this.unitPrice = unitPrice;
		this.status = status;
		this.timeRuleType = timeRuleType;
	}

	public TConSaleUnit(TCinema tCinema, TConItem tConItem,
			String saleUnitCode, String comments, String saleUnitName,
			String saleChannel, Boolean allowPrepaidCardDiscount,
			Boolean allowSaleCategoryDiscount, Boolean allowOnlineSale,
			Boolean bindPrepaidCard, Boolean allowAuthorizedSale,
			Boolean valid, Float unitPrice, String status, String timeBegin,
			String timeEnd, String dateBegin, String dateEnd, String timeRuleType,
			String saleType, String promotionType,
			List<TConSaleUnitLog> tConSaleUnitLogs) {
		this.tCinema = tCinema;
		this.tConItem = tConItem;
		this.saleUnitCode = saleUnitCode;
		this.comments = comments;
		this.saleUnitName = saleUnitName;
		this.saleChannel = saleChannel;
		this.allowPrepaidCardDiscount = allowPrepaidCardDiscount;
		this.allowSaleCategoryDiscount = allowSaleCategoryDiscount;
		this.allowOnlineSale = allowOnlineSale;
		this.bindPrepaidCard = bindPrepaidCard;
		this.allowAuthorizedSale = allowAuthorizedSale;
		this.valid = valid;
		this.unitPrice = unitPrice;
		this.status = status;
		this.timeBegin = timeBegin;
		this.timeEnd = timeEnd;
		this.dateBegin = dateBegin;
		this.dateEnd = dateEnd;
		this.timeRuleType = timeRuleType;
		this.saleType = saleType;
		this.promotionType = promotionType;
		this.tConSaleUnitLogs = tConSaleUnitLogs;
	}

	@SequenceGenerator(name = "generator", sequenceName = "S_T_CON_SALE_UNIT")
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "CON_SALE_UNIT_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CINEMA_ID", nullable = false, insertable = false, updatable = false)
	public TCinema gettCinema() {
		return this.tCinema;
	}

	public void settCinema(TCinema tCinema) {
		this.tCinema = tCinema;
	}
	
	@Column(name = "CINEMA_ID")
	public Long getCinemaId() {
		return cinemaId;
	}

	public void setCinemaId(Long cinemaId) {
		this.cinemaId = cinemaId;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_ITEM_ID", nullable = false, insertable = false, updatable = false)
	public TConItem gettConItem() {
		return this.tConItem;
	}

	public void settConItem(TConItem tConItem) {
		this.tConItem = tConItem;
	}
	
	@Column(name = "CON_ITEM_ID", nullable = false)
	public Long getConItemId() {
		return conItemId;
	}

	public void setConItemId(Long conItemId) {
		this.conItemId = conItemId;
	}

	@Column(name = "SALE_UNIT_CODE", nullable = false, length = 40)
	public String getSaleUnitCode() {
		return this.saleUnitCode;
	}

	public void setSaleUnitCode(String saleUnitCode) {
		this.saleUnitCode = saleUnitCode;
	}

	@Column(name = "COMMENTS", length = 2048)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@Column(name = "SALE_UNIT_NAME", nullable = false, length = 300)
	public String getSaleUnitName() {
		return this.saleUnitName;
	}

	public void setSaleUnitName(String saleUnitName) {
		this.saleUnitName = saleUnitName;
	}

	@Column(name = "SALE_CHANNEL", nullable = false, length = 20)
	public String getSaleChannel() {
		return this.saleChannel;
	}

	public void setSaleChannel(String saleChannel) {
		this.saleChannel = saleChannel;
	}

	@Column(name = "ALLOW_PREPAID_CARD_DISCOUNT", nullable = false, length = 1)
	public Boolean getAllowPrepaidCardDiscount() {
		return this.allowPrepaidCardDiscount;
	}

	public void setAllowPrepaidCardDiscount(Boolean allowPrepaidCardDiscount) {
		this.allowPrepaidCardDiscount = allowPrepaidCardDiscount;
	}

	@Column(name = "ALLOW_SALE_CATEGORY_DISCOUNT", nullable = false, length = 1)
	public Boolean getAllowSaleCategoryDiscount() {
		return this.allowSaleCategoryDiscount;
	}

	public void setAllowSaleCategoryDiscount(Boolean allowSaleCategoryDiscount) {
		this.allowSaleCategoryDiscount = allowSaleCategoryDiscount;
	}

	@Column(name = "ALLOW_ONLINE_SALE", nullable = false, length = 1)
	public Boolean getAllowOnlineSale() {
		return this.allowOnlineSale;
	}

	public void setAllowOnlineSale(Boolean allowOnlineSale) {
		this.allowOnlineSale = allowOnlineSale;
	}

	@Column(name = "BIND_PREPAID_CARD", nullable = false, length = 1)
	public Boolean getBindPrepaidCard() {
		return this.bindPrepaidCard;
	}

	public void setBindPrepaidCard(Boolean bindPrepaidCard) {
		this.bindPrepaidCard = bindPrepaidCard;
	}

	@Column(name = "ALLOW_AUTHORIZED_SALE", nullable = false, length = 1)
	public Boolean getAllowAuthorizedSale() {
		return this.allowAuthorizedSale;
	}

	public void setAllowAuthorizedSale(Boolean allowAuthorizedSale) {
		this.allowAuthorizedSale = allowAuthorizedSale;
	}

	@Column(name = "VALID", nullable = false, length = 1)
	public Boolean getValid() {
		return this.valid;
	}

	public void setValid(Boolean valid) {
		this.valid = valid;
	}

	@Column(name = "UNIT_PRICE", nullable = false, precision = 10)
	public Float getUnitPrice() {
		return this.unitPrice;
	}

	public void setUnitPrice(Float unitPrice) {
		this.unitPrice = unitPrice;
	}

	@Column(name = "STATUS", nullable = false, length = 20)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "TIME_BEGIN", length = 7)
	public String getTimeBegin() {
		return this.timeBegin;
	}

	public void setTimeBegin(String timeBegin) {
		this.timeBegin = timeBegin;
	}

	@Column(name = "TIME_END", length = 7)
	public String getTimeEnd() {
		return this.timeEnd;
	}

	public void setTimeEnd(String timeEnd) {
		this.timeEnd = timeEnd;
	}

	@Column(name = "DATE_BEGIN", length = 7)
	public String getDateBegin() {
		return this.dateBegin;
	}

	public void setDateBegin(String dateBegin) {
		this.dateBegin = dateBegin;
	}

	@Column(name = "DATE_END", length = 7)
	public String getDateEnd() {
		return this.dateEnd;
	}

	public void setDateEnd(String dateEnd) {
		this.dateEnd = dateEnd;
	}

	@Column(name = "TIME_RULE_TYPE", nullable = false, length = 20)
	public String getTimeRuleType() {
		return this.timeRuleType;
	}

	public void setTimeRuleType(String timeRuleType) {
		this.timeRuleType = timeRuleType;
	}

	@Column(name = "SALE_TYPE", length = 20)
	public String getSaleType() {
		return this.saleType;
	}

	public void setSaleType(String saleType) {
		this.saleType = saleType;
	}

	@Column(name = "PROMOTION_TYPE", length = 20)
	public String getPromotionType() {
		return this.promotionType;
	}

	public void setPromotionType(String promotionType) {
		this.promotionType = promotionType;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tConSaleUnit")
	@OrderBy(value="createdDate desc")
	public List<TConSaleUnitLog> gettConSaleUnitLogs() {
		return this.tConSaleUnitLogs;
	}

	public void settConSaleUnitLogs(List<TConSaleUnitLog> tConSaleUnitLogs) {
		this.tConSaleUnitLogs = tConSaleUnitLogs;
	}
	
//	@Transient
//	public String getStrTimeBegin() {
//		if(this.timeBegin != null)
//			strTimeBegin = new SimpleDateFormat("HH:mm").format(this.timeBegin);
//		return strTimeBegin;
//	}
//
//	public void setStrTimeBegin(String strTimeBegin) {
//		if(!StringUtil.isNullOrBlank(strTimeBegin))
//			try {
//				this.timeBegin = new SimpleDateFormat("HH:mm").parse(strTimeBegin);
//			} catch (ParseException e) {
//				e.printStackTrace();
//			}
//		else
//			this.timeBegin = null;
//		this.strTimeBegin = strTimeBegin;
//	}
//	
//	@Transient
//	public String getStrTimeEnd() {
//		if(this.timeEnd != null)
//			strTimeEnd = new SimpleDateFormat("HH:mm").format(this.timeEnd);
//		return strTimeEnd;
//	}
//
//	public void setStrTimeEnd(String strTimeEnd) {
//		if(!StringUtil.isNullOrBlank(strTimeEnd))
//			try {
//				this.timeEnd =  new SimpleDateFormat("HH:mm").parse(strTimeEnd);
//			} catch (ParseException e) {
//				e.printStackTrace();
//			}
//		else
//			this.timeEnd = null;
//		this.strTimeEnd = strTimeEnd;
//	}
	@Transient
	public Date getdDateBegin() {
		if(!StringUtil.isNullOrBlank(dateBegin))
			try {
				this.dDateBegin = new SimpleDateFormat("yyyy-MM-dd").parse(dateBegin);
			} catch (ParseException e) {
				e.printStackTrace();
			}
		return dDateBegin;
	}

	public void setdDateBegin(Date dDateBegin) {
		if(dDateBegin != null)
			this.dateBegin = new SimpleDateFormat("yyyy-MM-dd").format(dDateBegin);
		this.dDateBegin = dDateBegin;
	}
	
	@Transient
	public Date getdDateEnd() {
		if(!StringUtil.isNullOrBlank(dateEnd))
			try {
				this.dDateEnd = new SimpleDateFormat("yyyy-MM-dd").parse(dateEnd);
			} catch (ParseException e) {
				e.printStackTrace();
			}
		return dDateEnd;
	}

	public void setdDateEnd(Date dDateEnd) {
		if(dDateEnd != null)
			this.dateEnd = new SimpleDateFormat("yyyy-MM-dd").format(dDateEnd);
		this.dDateEnd = dDateEnd;
	}

	@Column(name = "CON_SALE_UNIT_GROUP_ID", nullable = false)
	public Long getConSaleUnitGroupId() {
		return conSaleUnitGroupId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_SALE_UNIT_GROUP_ID",insertable = false,updatable = false)
	public TConSaleUnitGroup gettConSaleUnitGroup() {
		return tConSaleUnitGroup;
	}
	public void setConSaleUnitGroupId(Long conSaleUnitGroupId) {
		this.conSaleUnitGroupId = conSaleUnitGroupId;
	}

	public void settConSaleUnitGroup(TConSaleUnitGroup tConSaleUnitGroup) {
		this.tConSaleUnitGroup = tConSaleUnitGroup;
	}

	@Column(name = "TRAN_STS")
	public String getTranSts() {
		return tranSts;
	}

	public void setTranSts(String tranSts) {
		this.tranSts = tranSts;
	}

	@Column(name = "TRAN_FN")
	public String getTranFn() {
		return tranFn;
	}

	public void setTranFn(String tranFn) {
		this.tranFn = tranFn;
	}

	@Column(name = "TRAN_MSG")
	public String getTranMsg() {
		return tranMsg;
	}

	public void setTranMsg(String tranMsg) {
		this.tranMsg = tranMsg;
	}
	
	@Column(name = "TRAN_TIME")
	public Date getTranTime() {
		return tranTime;
	}

	public void setTranTime(Date tranTime) {
		this.tranTime = tranTime;
	}
}
