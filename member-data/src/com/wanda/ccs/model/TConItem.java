package com.wanda.ccs.model;

// Generated Nov 30, 2012 1:59:30 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.OrderBy;
import org.hibernate.annotations.Where;

import com.xcesys.extras.core.util.StringUtil;

/**
 * TConItem generated by hbm2java
 */
@Entity
@Table(name = "T_CON_ITEM")
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
public class TConItem extends ConAbstractStateEntity implements java.io.Serializable {
	private static final long serialVersionUID = 7811408859830277519L;
	
	private Long id;
	private TConCategory tConCategory;//品项分类
	private String itemName;//品项名称
	private String shortName;//品项简称
	private Boolean valid = true;//是否有效
	private String itemCode;//品项编码
	private Long orgConItemId;//原始品项ID
	private Boolean applyAllCinema; // 是否所有影城
	private TConSingleItem TConSingleItem;
	private TConCompoundDef TConCompoundDef;
	private Set<TConItemCinema> tConItemCinemas = new HashSet<TConItemCinema>(0);
	private List<TConExtPropValue> tConExtPropValues = new ArrayList<TConExtPropValue>();
	private Set<TConPaItem> tConItemPaItems = new HashSet<TConPaItem>(0);
	private TConSet TConSet;
	private String strValid;
	private TCinema tCinema;
	private Long submitCinemaId;
	
	private String unit;// 计量单位
	

	private List<TConCompoundDefDetail> tConCompoundDefDetails = new ArrayList<TConCompoundDefDetail>();
	private List<TConSetDetail> tConSetDetails = new ArrayList<TConSetDetail>();
	private List<TConSaleUnit> tConSaleUnits = new ArrayList<TConSaleUnit>();

	public TConItem() {
	}
	
	public TConItem(TConItem item) {
		if(item == null)
			return ;
		this.tConCategory = item.gettConCategory();
		this.itemName = item.getItemName();
		this.shortName = item.getShortName();
		this.valid = item.getValid();
		this.itemCode = item.getItemCode();
		this.orgConItemId = item.getId();
		this.unit = item.getUnit();
		setSubmitBy(item.getSubmitBy());
		setSubmitTime(item.getSubmitTime());
//		for(TConItemCinema itemCinema : item.gettConItemCinemas()){
//			this.tConItemCinemas.add(new TConItemCinema(itemCinema, this));
//		}
		for(TConExtPropValue propValue : item.gettConExtPropValues()){
			this.tConExtPropValues.add(new TConExtPropValue(propValue, this));
		}
	}
	
	public void copy(TConItem item) {
		if(item == null)
			return ;
		this.tConCategory = item.gettConCategory();
		this.itemName = item.getItemName();
		this.shortName = item.getShortName();
		this.valid = item.getValid();
		this.itemCode = item.getItemCode();
		this.unit = item.getUnit();
		this.tConExtPropValues.clear();
		for(TConExtPropValue propValue : item.gettConExtPropValues()){
			this.tConExtPropValues.add(new TConExtPropValue(propValue, this));
		}
		this.tConItemCinemas.clear();
		for(TConItemCinema itemCinema : item.gettConItemCinemas()){
			this.tConItemCinemas.add(new TConItemCinema(itemCinema, this));
		}
	}
	
	public TConItem(TConCategory tConCategory) {
		this.tConCategory = tConCategory;
	}

	public TConItem(String itemName, Boolean valid, 
			String itemCode) {
		this.itemName = itemName;
		this.valid = valid;
		this.itemCode = itemCode;
	}

	@SequenceGenerator(name = "generator", sequenceName = "S_T_CON_ITEM", allocationSize = 1)
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "CON_ITEM_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_CATEGORY_ID")
	public TConCategory gettConCategory() {
		return this.tConCategory;
	}

	public void settConCategory(TConCategory tConCategory) {
		this.tConCategory = tConCategory;
	}

	@Column(name = "ITEM_NAME", nullable = false, length = 2048)
	public String getItemName() {
		return this.itemName;
	}

	public void setItemName(String itemName) {
		this.itemName = itemName;
	}

	@Column(name = "SHORT_NAME", length = 80)
	public String getShortName() {
		return this.shortName;
	}

	public void setShortName(String shortName) {
		this.shortName = shortName;
	}

	@Column(name = "VALID", nullable = false, length = 1)
	public Boolean getValid() {
		return this.valid;
	}

	public void setValid(Boolean valid) {
		this.valid = valid;
	}

	@Column(name = "ITEM_CODE", nullable = false, length = 40)
	public String getItemCode() {
		return this.itemCode;
	}

	public void setItemCode(String itemCode) {
		this.itemCode = itemCode;
	}


	@Column(name = "ORG_CON_ITEM_ID", precision = 22, scale = 0)
	public Long getOrgConItemId() {
		return this.orgConItemId;
	}

	public void setOrgConItemId(Long orgConItemId) {
		this.orgConItemId = orgConItemId;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "tConItem")
	public TConSingleItem getTConSingleItem() {
		return this.TConSingleItem;
	}

	public void setTConSingleItem(TConSingleItem TConSingleItem) {
		this.TConSingleItem = TConSingleItem;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "tConItem")
	public TConCompoundDef getTConCompoundDef() {
		return this.TConCompoundDef;
	}

	public void setTConCompoundDef(TConCompoundDef TConCompoundDef) {
		this.TConCompoundDef = TConCompoundDef;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tConItem", cascade = CascadeType.ALL, orphanRemoval=true)
//	@Where(clause="valid='1'")
	public Set<TConItemCinema> gettConItemCinemas() {
		return this.tConItemCinemas;
	}

	public void settConItemCinemas(Set<TConItemCinema> tConItemCinemas) {
		this.tConItemCinemas = tConItemCinemas;
	}
	
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "tConItem")
	public TConSet getTConSet() {
		return this.TConSet;
	}

	public void setTConSet(TConSet TConSet) {
		this.TConSet = TConSet;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tConItem", cascade = CascadeType.ALL, orphanRemoval = true)
	@OrderBy(clause="conCatExtPropId")
	public List<TConExtPropValue> gettConExtPropValues() {
		return this.tConExtPropValues;
	}

	public void settConExtPropValues(List<TConExtPropValue> tConExtPropValues) {
		this.tConExtPropValues = tConExtPropValues;
	}

	@Transient
	@Override
	public String getEntityName() {
		return "品项";
	}
	
	@Column(name = "APPLY_ALL_CINEMA")
	public Boolean getApplyAllCinema() {
		return applyAllCinema;
	}

	public void setApplyAllCinema(Boolean applyAllCinema) {
		this.applyAllCinema = applyAllCinema;
	}

	@Transient
	public String getStrValid() {
		if(valid)
			this.strValid = "Y";
		else
			this.strValid = "N";
		return strValid;
	}

	public void setStrValid(String strValid) {
		this.strValid = strValid;
		if(StringUtil.isNullOrBlank(strValid) || strValid.equals("Y"))
			this.valid = true;
		else
			this.valid = false;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tConItem")
	@Where(clause="deleted='0'")
	public Set<TConPaItem> gettConItemPaItems() {
		return tConItemPaItems;
	}

	public void settConItemPaItems(Set<TConPaItem> tConItemPaItems) {
		this.tConItemPaItems = tConItemPaItems;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tConItem")
	public List<TConCompoundDefDetail> gettConCompoundDefDetails() {
		return tConCompoundDefDetails;
	}

	public void settConCompoundDefDetails(
			List<TConCompoundDefDetail> tConCompoundDefDetails) {
		this.tConCompoundDefDetails = tConCompoundDefDetails;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tConItem")
	public List<TConSetDetail> gettConSetDetails() {
		return tConSetDetails;
	}

	public void settConSetDetails(List<TConSetDetail> tConSetDetails) {
		this.tConSetDetails = tConSetDetails;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tConItem")
	public List<TConSaleUnit> gettConSaleUnits() {
		return tConSaleUnits;
	}

	public void settConSaleUnits(List<TConSaleUnit> tConSaleUnits) {
		this.tConSaleUnits = tConSaleUnits;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUBMIT_CINEMA_ID", insertable = false, updatable = false)
	public TCinema gettCinema() {
		return tCinema;
	}

	public void settCinema(TCinema tCinema) {
		this.tCinema = tCinema;
	}
	
	@Column(name="SUBMIT_CINEMA_ID")
	public Long getSubmitCinemaId() {
		return submitCinemaId;
	}

	public void setSubmitCinemaId(Long submitCinemaId) {
		this.submitCinemaId = submitCinemaId;
	}

	@Column(name = "UNIT", length = 20)
	public String getUnit() {
		return unit;
	}

	public void setUnit(String unit) {
		this.unit = unit;
	}
}
