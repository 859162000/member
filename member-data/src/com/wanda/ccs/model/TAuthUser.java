package com.wanda.ccs.model;

// Generated 2011-11-29 14:55:15 by Hibernate Tools 3.2.4.GA

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.xcesys.extras.core.dao.model.BlameableEntity;

/**
 * TAuthUser generated by hbm2java
 * 系统用户
 */
@Entity
@Table(name = "T_AUTH_USER", uniqueConstraints = @UniqueConstraint(columnNames = "LOGIN_ID"))
public class TAuthUser extends BlameableEntity implements
		java.io.Serializable {
	private static final long serialVersionUID = 1495439573598628559L;
	
	private Long id;
	private String fromNc = "N";//Y表示用户来自NC
	private String pkPsnbasdoc;  //TNcBdPsndoc
	private TCinema tCinema; 
	private Long cinemaId; //所属影城id
	private String loginId;  //用户登录账号
	private String loginPwd; //用户登录密码
	private String userLevel;//用户所属级别 G院线级  R区域级  C影城级  T中心店
	private String userName; //用户姓名
	private String userEmail;//用户email
	private String region;//用户所属区域
	private String status = "E";//用户状态E正常，D禁用
	private Long serialNumber; //序列号
	private String rtx;//EHR rtx账号

	private Set<TAuthUserRgroup> tAuthUserRgroups = new HashSet<TAuthUserRgroup>(
			0);
	private Set<TAuthUserRight> tAuthUserRights = new HashSet<TAuthUserRight>(0);

	public TAuthUser() {
	}
	@SequenceGenerator(name = "generator", sequenceName = "S_T_AUTH_USER")
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "AUTH_USER_ID", unique = true, nullable = false, precision = 38, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}
	
	@Column(name = "FROM_NC", nullable = false, length = 1)
	public String getFromNc() {
		return this.fromNc;
	}

	public void setFromNc(String fromNc) {
		this.fromNc = fromNc;
	}
	
	@Column(name = "PK_PSNBASDOC" , length = 20)
	public String getPkPsnbasdoc() {
		return pkPsnbasdoc;
	}

	public void setPkPsnbasdoc(String pkPsnbasdoc) {
		this.pkPsnbasdoc = pkPsnbasdoc;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CINEMA", insertable = false, updatable = false)
	public TCinema gettCinema() {
		return this.tCinema;
	}

	public void settCinema(TCinema tCinema) {
		this.tCinema = tCinema;
	}
	
	@Column(name = "CINEMA" )
	public Long getCinemaId() {	
		return cinemaId;
	}

	public void setCinemaId(Long cinemaId) {
		this.cinemaId = cinemaId;
	}
	
	@Column(name = "LOGIN_ID", unique = true, length = 20)
	public String getLoginId() {
		return this.loginId;
	}

	public void setLoginId(String loginId) {
		this.loginId = loginId;
	}

	@Column(name = "LOGIN_PWD", length = 200)
	public String getLoginPwd() {
		return this.loginPwd;
	}

	public void setLoginPwd(String loginPwd) {
		this.loginPwd = loginPwd;
	}

	@Column(name = "USER_LEVEL", length = 1)
	public String getUserLevel() {
		return this.userLevel;
	}

	public void setUserLevel(String userLevel) {
		this.userLevel = userLevel;
	}

	@Column(name = "USER_NAME",length=20)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "USER_EMAIL", length = 100)
	public String getUserEmail() {
		return this.userEmail;
	}

	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}

	@Column(name = "REGION", length = 20)
	public String getRegion() {
		return this.region;
	}

	public void setRegion(String region) {
		this.region = region;
	}

	@Column(name = "STATUS", nullable = false, length = 1)
	public String getStatus() {
		return this.status;
	}
	
	public void setStatus(String status) {
		this.status = status;
	}
	
	@Column(name = "SERIAL_NUMBER", precision = 20, scale = 0)
	public Long getSerialNumber() {
		return this.serialNumber;
	}

	public void setSerialNumber(Long serialNumber) {
		this.serialNumber = serialNumber;
	}
	
	@Column(name = "RTX", length = 64)
	public String getRtx() {
		return rtx;
	}
	public void setRtx(String rtx) {
		this.rtx = rtx;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tAuthUser")
	@Fetch(FetchMode.SUBSELECT)
	public Set<TAuthUserRgroup> gettAuthUserRgroups() {
		return this.tAuthUserRgroups;
	}

	public void settAuthUserRgroups(Set<TAuthUserRgroup> tAuthUserRgroups) {
		this.tAuthUserRgroups = tAuthUserRgroups;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tAuthUser")
	@Fetch(FetchMode.SUBSELECT)
	public Set<TAuthUserRight> gettAuthUserRights() {
		return this.tAuthUserRights;
	}

	public void settAuthUserRights(Set<TAuthUserRight> tAuthUserRights) {
		this.tAuthUserRights = tAuthUserRights;
	}
	
	@Transient
	public String getStringSerialNumber() {
		if(this.serialNumber == null)
			return null;
		return this.serialNumber.toString();
	}
	
	public void setStringSerialNumber(String stringSerialNumber) {
		if(stringSerialNumber == null || stringSerialNumber.equals("")){
			setSerialNumber(null);
		}else{
			setSerialNumber(Long.valueOf(stringSerialNumber));
		}
	}

}
