package com.wanda.ccs.model;

// Generated Nov 30, 2012 1:59:30 PM by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import com.xcesys.extras.core.dao.model.VersionableEntity;

/**
 * TConSet generated by hbm2java
 */
@Entity
@Table(name = "T_CON_SET")
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
public class TConSet extends VersionableEntity implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	private Long conItemId;
	private TConItem tConItem;
	private String personNumber; // 套餐人数(单人、双人、多人)
	private Date dateBegin;
	private Date dateEnd;
	private String subjectType; //主题类型
	private String setName; // 套餐名称
	private String regionType;//适用类型，分院线通用和影城专用
	private Long cinemaId; //适用类型为影城专用时的对应影城ID
	private TCinema cinema;
	private TConFileAttach fileAttach;
	private List<TConSetDetail> tConSetDetails = new ArrayList<TConSetDetail>(0);
	
	// 更新人身份(院线、影城)
	private String updatedByUserLevel;

	public TConSet() {
		tConItem = new TConItem();
	}

	@Id
	@GenericGenerator(name = "generator", strategy = "foreign", parameters = { @Parameter(name = "property", value = "tConItem") }) 
	@GeneratedValue(generator = "generator")
	@Column(name = "CON_ITEM_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getConItemId() {
		return this.conItemId;
	}

	public void setConItemId(Long conItemId) {
		this.conItemId = conItemId;
	}

	@OneToOne(fetch = FetchType.LAZY,cascade = CascadeType.ALL)
	@PrimaryKeyJoinColumn
	public TConItem gettConItem() {
		return this.tConItem;
	}

	public void settConItem(TConItem tConItem) {
		this.tConItem = tConItem;
	}


	@Column(name = "PERSON_NUMBER")
	public String getPersonNumber() {
		return this.personNumber;
	}

	public void setPersonNumber(String personNumber) {
		this.personNumber = personNumber;
	}

	@Column(name = "DATE_BEGIN", length = 7)
	public Date getDateBegin() {
		return this.dateBegin;
	}

	public void setDateBegin(Date dateBegin) {
		this.dateBegin = dateBegin;
	}

	@Column(name = "DATE_END", length = 7)
	public Date getDateEnd() {
		return this.dateEnd;
	}

	public void setDateEnd(Date dateEnd) {
		this.dateEnd = dateEnd;
	}

	@Column(name = "SUBJECT_TYPE", length = 20)
	public String getSubjectType() {
		return this.subjectType;
	}

	public void setSubjectType(String subjectType) {
		this.subjectType = subjectType;
	}

	@Column(name = "SET_NAME", nullable = false, length = 2048)
	public String getSetName() {
		return this.setName;
	}

	public void setSetName(String setName) {
		this.setName = setName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tConSet",cascade = CascadeType.ALL , orphanRemoval = true)
	@OrderBy("groupIndex")
	public List<TConSetDetail> gettConSetDetails() {
		return this.tConSetDetails;
	}

	public void settConSetDetails(List<TConSetDetail> tConSetDetails) {
		this.tConSetDetails = tConSetDetails;
	}
	
	@Override
	@Transient
	public Long getId() {
		return this.conItemId;
	}

	@Override
	public void setId(Long id) {
		this.conItemId = id;
	}

	@Column(name = "REGION_TYPE", nullable = false, length = 1)
	public String getRegionType() {
		return regionType;
	}

	public void setRegionType(String regionType) {
		this.regionType = regionType;
	}

	@Column(name = "CINEMA_ID")
	public Long getCinemaId() {
		return cinemaId;
	}

	public void setCinemaId(Long cinemaId) {
		this.cinemaId = cinemaId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CINEMA_ID", insertable = false, updatable = false)
	public TCinema getCinema() {
		return cinema;
	}

	public void setCinema(TCinema cinema) {
		this.cinema = cinema;
	}

	@Transient
	public TConFileAttach getFileAttach() {
		return fileAttach;
	}

	public void setFileAttach(TConFileAttach fileAttach) {
		this.fileAttach = fileAttach;
	}

	@Transient
	public String getUpdatedByUserLevel() {
		return updatedByUserLevel;
	}

	public void setUpdatedByUserLevel(String updatedByUserLevel) {
		this.updatedByUserLevel = updatedByUserLevel;
	}
	
	@Transient
	public Map<Integer, List<TConSetDetail>> getDetails() {
		Map<Integer, List<TConSetDetail>> gMap = new LinkedHashMap<Integer, List<TConSetDetail>>();
		for (TConSetDetail d : gettConSetDetails()) {
			if (gMap.get(d.getGroupIndex()) == null) {
				gMap.put(d.getGroupIndex(), new ArrayList<TConSetDetail>());
			}
			gMap.get(d.getGroupIndex()).add(d);
		}
		
		return gMap;
	}
}
