package com.wanda.ccs.model;

// Generated 2011-10-17 18:01:57 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

import com.xcesys.extras.core.dao.model.DeleteableEntity;

/**
 * TFilmContract generated by hbm2java
 */
@Entity
@Table(name = "T_FILM_CONTRACT")
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
public class TFilmContract extends DeleteableEntity implements
		java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Long id;
	private TFilm tFilm;
	private Long tFilmId;
	private String contractNo;// 合同编号
	private String contractType;// 合同类型
	private Date contractDate;// 合同签订日期
	private Long publisherId;// 发行商ID
	private TPublisher tPublisher;
	private Set<TFcAttach> tFcAttachs = new HashSet<TFcAttach>(0);// 合同文件
	private Set<TFcIssueScope> tFcIssueScopes = new HashSet<TFcIssueScope>(0);// 合同发行范围
	
	private String accountRatioDesc;// 分账比例描述
	
//	private Long filmCopyCount;// 拷贝数(胶片)
//	private Long digitCopyCount;// 拷贝数(数字)
//	private Long standardPrice;// 最低票价

	public TFilmContract() {
	}

	@Column(name = "CONTRACT_DATE", length = 7)
	public Date getContractDate() {
		return this.contractDate;
	}

	@Column(name = "CONTRACT_NO", length = 30)
	@NotEmpty(message="合同编号不可为空")
	@Length(max=30,min=0,message="长度不能够大于30位")
	@Pattern(regexp="[^\u4e00-\u9fa5]*",message="不应包含汉字")
	public String getContractNo() {
		return this.contractNo;
	}

	@Column(name = "CONTRACT_TYPE", length = 20)
	public String getContractType() {
		return this.contractType;
	}

//	@Digits(integer = 10, fraction = 0,message="拷贝数(胶片)长度应小于10")
//	@Min(value = 0l)
//	@Column(name = "DIGIT_COPY_COUNT", precision = 38, scale = 0)
//	public Long getDigitCopyCount() {
//		return this.digitCopyCount;
//	}
//
//	@Digits(integer = 10, fraction = 0,message="拷贝数(数字)长度应小于10")
//	@Min(value = 0l)
//	@Column(name = "FILM_COPY_COUNT", precision = 38, scale = 0)
//	public Long getFilmCopyCount() {
//		return this.filmCopyCount;
//	}

	@Override
	@SequenceGenerator(name = "generator", sequenceName = "S_T_FILM_CONTRACT")
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "SEQID", unique = true, nullable = false, precision = 38, scale = 0)
	public Long getId() {
		return this.id;
	}

	@Column(name = "PUBLISHER_ID", precision = 38, scale = 0)
	public Long getPublisherId() {
		return this.publisherId;
	}

	@Transient
	public String getAccountRatioDesc() {
		return this.accountRatioDesc;
	}
//
//	@Column(name = "STANDARD_PRICE", precision = 38, scale = 0)
//	public Long getStandardPrice() {
//		return this.standardPrice;
//	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tFilmContract", cascade = CascadeType.ALL,orphanRemoval = true)
	public Set<TFcAttach> gettFcAttachs() {
		return this.tFcAttachs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tFilmContract")
	public Set<TFcIssueScope> gettFcIssueScopes() {
		return this.tFcIssueScopes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FILM_ID", insertable = false, updatable = false)
	public TFilm gettFilm() {
		return this.tFilm;
	}

	@Column(name = "FILM_ID", precision = 38, scale = 0)
	public Long gettFilmId() {
		return tFilmId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PUBLISHER_ID", insertable = false, updatable = false)
	public TPublisher gettPublisher() {
		return tPublisher;
	}

	public void setContractDate(Date contractDate) {
		this.contractDate = contractDate;
	}

	public void setContractNo(String contractNo) {
		this.contractNo = contractNo;
	}

	public void setContractType(String contractType) {
		this.contractType = contractType;
	}

//	public void setDigitCopyCount(Long digitCopyCount) {
//		this.digitCopyCount = digitCopyCount;
//	}
//
//	public void setFilmCopyCount(Long filmCopyCount) {
//		this.filmCopyCount = filmCopyCount;
//	}

	@Override
	public void setId(Long id) {
		this.id = id;
	}

	public void setPublisherId(Long publisherId) {
		this.publisherId = publisherId;
	}

	public void setAccountRatioDesc(String accountRatioDesc) {
		this.accountRatioDesc = accountRatioDesc;
	}
//
//	public void setStandardPrice(Long standardPrice) {
//		this.standardPrice = standardPrice;
//	}

	public void settFcAttachs(Set<TFcAttach> tFcAttachs) {
		this.tFcAttachs = tFcAttachs;
	}

	public void settFcIssueScopes(Set<TFcIssueScope> tFcIssueScopes) {
		this.tFcIssueScopes = tFcIssueScopes;
	}

	public void settFilm(TFilm tFilm) {
		this.tFilm = tFilm;
	}

	public void settFilmId(Long filmId) {
		this.tFilmId = filmId;
	}

	public void settPublisher(TPublisher tPublisher) {
		this.tPublisher = tPublisher;
	}
}
