package com.wanda.ccs.model;

// Generated 2013-5-21 18:55:28 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.SEQUENCE;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.xcesys.extras.core.dao.model.BlameableEntity;
import com.xcesys.extras.core.util.DateUtil;
import com.xcesys.extras.core.util.StringUtil;

/**
 * TCmnActivity generated by hbm2java
 * 活动波次
 */
@Entity
@Table(name = "T_CMN_ACTIVITY")
public class TCmnActivity extends BlameableEntity implements
		java.io.Serializable {
	private static final long serialVersionUID = 1746555357852931049L;
	
	private Long id;
	private TOffer tOffer;//通知话术
	private TCampaign tCampaign;//活动
	private Long campaignId;//活动id
	private TActTarget tActTarget;//目标
	private TCmnPhase tCmnPhase;//活动阶段
	private Long cmnPhaseId;//活动阶段id
	private String name;//名称
	private String code;//编码
	private Date startDtime;//开始时间
	private Date endDtime;//结束时间
	private String status;//波次状态
	private String promotionType;//营销类型
	private String description;//描述
	private String priority;//优先级
//	private TActResult tActResult;
	private List<TActResult> tActResults = new ArrayList<TActResult>();
	
	private TActOffer tActOffer;//通知话术
	
	private boolean canEnabled;
	private String strStartDtime;
	private String strEndDtime;
	
	private TFileAttach fileAttach;
	
	public boolean canCancelPublish;
	


	public TCmnActivity() {
	}

	@SequenceGenerator(name = "generator", sequenceName = "S_T_CMN_ACTIVITY", allocationSize = 1)
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "CMN_ACTIVITY_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "OFFER_ID")
	public TOffer gettOffer() {
		return this.tOffer;
	}

	public void settOffer(TOffer tOffer) {
		this.tOffer = tOffer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CAMPAIGN_ID", nullable = false, insertable = false, updatable = false)
	public TCampaign gettCampaign() {
		return this.tCampaign;
	}

	public void settCampaign(TCampaign tCampaign) {
		this.tCampaign = tCampaign;
	}
	
	@Column(name = "CAMPAIGN_ID")
	public Long getCampaignId() {
		return campaignId;
	}

	public void setCampaignId(Long campaignId) {
		this.campaignId = campaignId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CMN_PHAISE_ID", nullable = false, insertable = false, updatable = false)
	public TCmnPhase gettCmnPhase() {
		return this.tCmnPhase;
	}

	public void settCmnPhase(TCmnPhase tCmnPhase) {
		this.tCmnPhase = tCmnPhase;
	}
	
	@Column(name = "CMN_PHAISE_ID")
	public Long getCmnPhaseId() {
		return cmnPhaseId;
	}

	public void setCmnPhaseId(Long cmnPhaseId) {
		this.cmnPhaseId = cmnPhaseId;
	}
	
	@Column(name = "NAME", length = 256)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "CODE", nullable = false, length = 30)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "START_DTIME")
	public Date getStartDtime() {
		return this.startDtime;
	}

	public void setStartDtime(Date startDtime) {
		this.startDtime = startDtime;
	}

	@Column(name = "END_DTIME")
	public Date getEndDtime() {
		return this.endDtime;
	}

	public void setEndDtime(Date endDtime) {
		this.endDtime = endDtime;
	}

	@Column(name = "STATUS", nullable = false, length = 20)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "PROMOTION_TYPE", nullable = false, length = 20)
	public String getPromotionType() {
		return this.promotionType;
	}

	public void setPromotionType(String promotionType) {
		this.promotionType = promotionType;
	}

	@Column(name = "DESCRIPTION", length = 4000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "PRIORITY", nullable = false, precision = 22, scale = 0)
	public String getPriority() {
		return this.priority;
	}

	public void setPriority(String priority) {
		this.priority = priority;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tCmnActivity", cascade = CascadeType.ALL, orphanRemoval = true)
	public List<TActResult> gettActResults() {
		return tActResults;
	}

	public void settActResults(List<TActResult> tActResults) {
		this.tActResults = tActResults;
	}
	
	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "ACT_TARGET_ID")
	public TActTarget gettActTarget() {
		return this.tActTarget;
	}

	public void settActTarget(TActTarget tActTarget) {
		this.tActTarget = tActTarget;
	}
	
	@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinColumn(name = "ACT_OFFER_ID")
	public TActOffer gettActOffer() {
		return tActOffer;
	}

	public void settActOffer(TActOffer tActOffer) {
		this.tActOffer = tActOffer;
	}
	
	@Transient
	public boolean isCanEnabled() {
		return canEnabled;
	}

	public void setCanEnabled(boolean canEnabled) {
		this.canEnabled = canEnabled;
	}
	
	@Transient
	public String getStrStartDtime() {
		if(startDtime != null)
			strStartDtime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(startDtime);
		return strStartDtime;
	}

	public void setStrStartDtime(String strStartDtime) {
		try {
			if(!StringUtil.isNullOrBlank(strStartDtime))
				startDtime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(strStartDtime);
			else
				startDtime = null;
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		this.strStartDtime = strStartDtime;
	}
	
	@Transient
	public String getStrEndDtime() {
		if(endDtime != null)
			strEndDtime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(endDtime);
		return strEndDtime;
	}

	public void setStrEndDtime(String strEndDtime) {
		try {
			if(!StringUtil.isNullOrBlank(strEndDtime))
				endDtime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(strEndDtime);
			else
				endDtime = null;
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		this.strEndDtime = strEndDtime;
	}
	
	@Transient
	public TFileAttach getFileAttach() {
		return fileAttach;
	}

	public void setFileAttach(TFileAttach fileAttach) {
		this.fileAttach = fileAttach;
	}
	
	
	@Transient
	public boolean isCanCancelPublish() {
		if(this.gettOffer() != null && this.gettOffer().getToldTime().after(DateUtil.getCurrentDate()))
			canCancelPublish = true;
		else
			canCancelPublish = false;
		return canCancelPublish;
	}

	public void setCanCancelPublish(boolean canCancelPublish) {
		this.canCancelPublish = canCancelPublish;
	}
	@Override
	public String toString(){
		return code + "|" + name;
	}

}
