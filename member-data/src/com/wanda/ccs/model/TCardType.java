package com.wanda.ccs.model;

// Generated 2011-11-2 12:36:06 by Hibernate Tools 3.2.4.GA

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import com.xcesys.extras.core.dao.model.VersionableEntity;

/**
 * TCardType generated by hbm2java
 */
@Entity
@Table(name = "T_CARD_TYPE")
public class TCardType extends VersionableEntity implements
		java.io.Serializable {
	private static final long serialVersionUID = 8690913195566721597L;
	
	private Long id;
	private TTicketType tTicketType;
	private String typeName;// 卡类型名称
	private String status = "E";// 卡类型状态：E-可用、D-不可用、x-删除
	private String typeCode;// 卡类型编码
	private String cardLevel;// 卡类型的级别 G-院线级 R-区域级
	private String ownerRegion;// 区域级卡的负责区域代码 院线级为null
	private String valueType;// 卡值类型 M-储值卡 T-记次卡 D权益卡
	private String description;// 备注
	private String endorsement;
	private Long expiryMonth = 0l;// 有效期
	private String isRechargeable = "Y"; //Y表示可以充值，N表示不可充值
	private String cardRange = "A"; //A表示可在适用本卡类型的所有影城通用 B可在发卡影城所属区域中适用本卡类型的影城通用C表示可在发卡影城所在城市中适用本卡类型的影城通用 O表示仅可以用于发卡影城。
	private Set<TCardTypeDef> tCardTypeDefs = new HashSet<TCardTypeDef>(0);
	private Set<TCardTypeGoodsDiscount> tCardTypeGoodsDiscounts = new HashSet<TCardTypeGoodsDiscount>(0);
	private Set<TCard> tCards = new HashSet<TCard>(0);
	private Set<TCardOrder> tCardOrders = new HashSet<TCardOrder>(0);
	private Set<TCardTypeRecharge> tCardTypeRecharges = new HashSet<TCardTypeRecharge>(
			0);
	private Set<TReqCardType> tReqCardTypes = new HashSet<TReqCardType>(0);
	private List<TTicketTypeCinema> tTicketTypeCinemas = new ArrayList<TTicketTypeCinema>(
			0);
	private List<TTicketTypeRegion> tTicketTypeRegions = new ArrayList<TTicketTypeRegion>(
			0);

	public TCardType() {
	}

	public TCardType(TReqCardType req, TTicketType ticketType) {
		setTypeName(req.getTypeName());
		setTypeCode(req.getTypeCode());
		setCardLevel(req.getCardLevel());
		setOwnerRegion(req.getOwnerRegion());
		setValueType(req.getValueType());
		setDescription(req.getDescription());
		setEndorsement(req.getEndorsement());
		setExpiryMonth(req.getExpiryMonth());
		setIsRechargeable(req.getIsRechargeable());
		tTicketType = ticketType;
	}

	public TCardType(TTicketType tTicketType, String typeName, String status,
			String typeCode, String cardLevel, String valueType) {
		this.tTicketType = tTicketType;
		this.typeName = typeName;
		this.status = status;
		this.typeCode = typeCode;
		this.cardLevel = cardLevel;
		this.valueType = valueType;
	}

	public TCardType(TTicketType tTicketType, String typeName, String status,
			String typeCode, String cardLevel, String ownerRegion,
			String valueType, String description, String endorsement,
			Set<TCardTypeDef> tCardTypeDefs, Set<TCard> tCards,
			Set<TCardOrder> tCardOrders,
			Set<TCardTypeRecharge> tCardTypeRecharges,
			Set<TReqCardType> tReqCardTypes,
			List<TTicketTypeCinema> tTicketTypeCinemas,
			ArrayList<TTicketTypeRegion> tTicketTypeRegions) {
		this.tTicketType = tTicketType;
		this.typeName = typeName;
		this.status = status;
		this.typeCode = typeCode;
		this.cardLevel = cardLevel;
		this.ownerRegion = ownerRegion;
		this.valueType = valueType;
		this.description = description;
		this.endorsement = endorsement;
		this.tCardTypeDefs = tCardTypeDefs;
		this.tCards = tCards;
		this.tCardOrders = tCardOrders;
		this.tCardTypeRecharges = tCardTypeRecharges;
		this.tReqCardTypes = tReqCardTypes;
		this.tTicketTypeCinemas = tTicketTypeCinemas;
		this.tTicketTypeRegions = tTicketTypeRegions;
	}

	public void copy(TReqCardType req) {
		setTypeName(req.getTypeName());
		setTypeCode(req.getTypeCode());
		setDescription(req.getDescription());
		setEndorsement(req.getEndorsement());
		setExpiryMonth(req.getExpiryMonth());
		setIsRechargeable(req.getIsRechargeable());
	}

	@Id
	@Column(name = "CARD_TYPE_ID")
	@GeneratedValue(generator = "foreigner")
	@GenericGenerator(name = "foreigner", strategy = "foreign", parameters = { @Parameter(name = "property", value = "tTicketType") })
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public TTicketType gettTicketType() {
		return this.tTicketType;
	}

	public void settTicketType(TTicketType tTicketType) {
		this.tTicketType = tTicketType;
	}

	@Column(name = "TYPE_NAME", nullable = false, length = 3072)
	public String getTypeName() {
		return this.typeName;
	}

	public void setTypeName(String typeName) {
		this.typeName = typeName.trim();
	}

	@Column(name = "STATUS", nullable = false, length = 1)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "TYPE_CODE", nullable = false, length = 50)
	public String getTypeCode() {
		return this.typeCode;
	}

	public void setTypeCode(String typeCode) {
		this.typeCode = typeCode;
	}

	@Column(name = "CARD_LEVEL", nullable = false, length = 1)
	public String getCardLevel() {
		return this.cardLevel;
	}

	public void setCardLevel(String cardLevel) {
		this.cardLevel = cardLevel;
	}

	@Column(name = "OWNER_REGION", length = 20)
	public String getOwnerRegion() {
		return this.ownerRegion;
	}

	public void setOwnerRegion(String ownerRegion) {
		this.ownerRegion = ownerRegion;
	}

	@Column(name = "VALUE_TYPE", nullable = false, length = 1)
	public String getValueType() {
		return this.valueType;
	}

	public void setValueType(String valueType) {
		this.valueType = valueType;
	}

	@Column(name = "DESCRIPTION", length = 2000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "ENDORSEMENT")
	public String getEndorsement() {
		return this.endorsement;
	}

	public void setEndorsement(String endorsement) {
		this.endorsement = endorsement;
	}

	@Column(name = "EXPIRY_MONTH", nullable = false, precision = 38)
	public Long getExpiryMonth() {
		return expiryMonth;
	}

	public void setExpiryMonth(Long expiryMonth) {
		this.expiryMonth = expiryMonth;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tCardType")
	public Set<TCardTypeDef> gettCardTypeDefs() {
		return this.tCardTypeDefs;
	}

	public void settCardTypeDefs(Set<TCardTypeDef> tCardTypeDefs) {
		this.tCardTypeDefs = tCardTypeDefs;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tCardType")
	public Set<TCardTypeGoodsDiscount> gettCardTypeGoodsDiscounts() {
		return tCardTypeGoodsDiscounts;
	}

	public void settCardTypeGoodsDiscounts(
			Set<TCardTypeGoodsDiscount> tCardTypeGoodsDiscounts) {
		this.tCardTypeGoodsDiscounts = tCardTypeGoodsDiscounts;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tCardType")
	public Set<TCard> gettCards() {
		return this.tCards;
	}

	public void settCards(Set<TCard> tCards) {
		this.tCards = tCards;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tCardType")
	public Set<TCardOrder> gettCardOrders() {
		return this.tCardOrders;
	}

	public void settCardOrders(Set<TCardOrder> tCardOrders) {
		this.tCardOrders = tCardOrders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tCardType")
	public Set<TCardTypeRecharge> gettCardTypeRecharges() {
		return this.tCardTypeRecharges;
	}

	public void settCardTypeRecharges(Set<TCardTypeRecharge> tCardTypeRecharges) {
		this.tCardTypeRecharges = tCardTypeRecharges;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tCardType")
	public Set<TReqCardType> gettReqCardTypes() {
		return this.tReqCardTypes;
	}

	public void settReqCardTypes(Set<TReqCardType> tReqCardTypes) {
		this.tReqCardTypes = tReqCardTypes;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tCardType")
	@OrderBy("cinemaId")
	@Fetch(FetchMode.SUBSELECT)
	public List<TTicketTypeCinema> gettTicketTypeCinemas() {
		return tTicketTypeCinemas;
	}

	public void settTicketTypeCinemas(List<TTicketTypeCinema> tTicketTypeCinemas) {
		this.tTicketTypeCinemas = tTicketTypeCinemas;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tCardType")
	@OrderBy("regionCode")
	@Fetch(FetchMode.SUBSELECT)
	public List<TTicketTypeRegion> gettTicketTypeRegions() {
		return tTicketTypeRegions;
	}

	public void settTicketTypeRegions(List<TTicketTypeRegion> tTicketTypeRegions) {
		this.tTicketTypeRegions = tTicketTypeRegions;
	}
	
	@Column(name = "IS_RECHARGEABLE")
	public String getIsRechargeable() {
		return isRechargeable;
	}

	public void setIsRechargeable(String isRechargeable) {
		this.isRechargeable = isRechargeable;
	}
	@Column(name = "CARD_RANGE")
	public String getCardRange() {
		return cardRange;
	}

	public void setCardRange(String cardRange) {
		this.cardRange = cardRange;
	}
}
