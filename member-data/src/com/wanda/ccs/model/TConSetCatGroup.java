package com.wanda.ccs.model;

// Generated Dec 20, 2012 5:27:08 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.xcesys.extras.core.dao.model.VersionableEntity;

/**
 * TConSetCatGroup generated by hbm2java
 */
@Entity
@Table(name = "T_CON_SET_CAT_GROUP")
@org.hibernate.annotations.Entity(dynamicUpdate = true, dynamicInsert = true)
public class TConSetCatGroup extends VersionableEntity implements
		java.io.Serializable {
	private static final long serialVersionUID = 1L;

	private Long id;
	private Boolean requiredGroup;
	private Integer requiredNumber;
	private String subConCategoryIds; // 子分类ID，逗号分隔
	private Set<String> subConCategoryIdsSet;
	private Integer groupIndex;
	private Long conCategoryId;
	private TConCategory tConCategory;
	
	private List<TConCategory> subConCategorys = new ArrayList<TConCategory>(0);

	public TConSetCatGroup() {
		requiredNumber = 0;
	}

	@SequenceGenerator(name = "generator", sequenceName = "S_T_CON_SET_CAT_GROUP")
	@Id
	@GeneratedValue(strategy = SEQUENCE, generator = "generator")
	@Column(name = "CON_SET_CAT_GROUP_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "REQUIRED_GROUP", nullable = false, length = 1)
	public Boolean getRequiredGroup() {
		return this.requiredGroup;
	}

	public void setRequiredGroup(Boolean requiredGroup) {
		this.requiredGroup = requiredGroup;
	}

	@Column(name = "REQUIRED_NUMBER", nullable = false, precision = 8, scale = 0)
	public Integer getRequiredNumber() {
		return this.requiredNumber;
	}

	public void setRequiredNumber(Integer requiredNumber) {
		this.requiredNumber = requiredNumber;
	}

	@Column(name = "SUB_CON_CATEGORY_IDS", nullable = false)
	public String getSubConCategoryIds() {
		return this.subConCategoryIds;
	}

	public void setSubConCategoryIds(String subConCategoryIds) {
		this.subConCategoryIds = subConCategoryIds;
	}

	@Column(name = "GROUP_INDEX", precision = 8, scale = 0)
	public Integer getGroupIndex() {
		return this.groupIndex;
	}

	public void setGroupIndex(Integer groupIndex) {
		this.groupIndex = groupIndex;
	}

	@Column(name = "CON_CATEGORY_ID", precision = 22, scale = 0)
	public Long getConCategoryId() {
		return this.conCategoryId;
	}

	public void setConCategoryId(Long conCategoryId) {
		this.conCategoryId = conCategoryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CON_CATEGORY_ID", insertable = false, updatable = false)
	public TConCategory gettConCategory() {
		return tConCategory;
	}

	public void settConCategory(TConCategory tConCategory) {
		this.tConCategory = tConCategory;
	}

	@Transient
	public List<TConCategory> getSubConCategorys() {
		return subConCategorys;
	}

	public void setSubConCategorys(List<TConCategory> subConCategorys) {
		this.subConCategorys = subConCategorys;
	}

	@Transient
	public Set<String> getSubConCategoryIdsSet() {
		if(getSubConCategoryIds() != null && getSubConCategoryIds().length() > 0){
			String[] split = getSubConCategoryIds().split(",");
			setSubConCategoryIdsSet(new HashSet<String>(Arrays.asList(split)));
		}
		return subConCategoryIdsSet;
	}

	public void setSubConCategoryIdsSet(Set<String> subConCategoryIdsSet) {
		this.subConCategoryIdsSet = subConCategoryIdsSet;
	}

}
